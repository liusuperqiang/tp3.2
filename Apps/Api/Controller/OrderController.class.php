<?php


namespace Api\Controller;


class OrderController extends ApiBaseController
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    //保存订单
    public function Saveorder(){
        $result = array('statuscode' => 200, 'message' => '');

        $consignee = I('param.consignee/s','','strip_tags,htmlspecialchars');
        $mobile = I('param.mobile/s','','strip_tags,htmlspecialchars');
        $province = I('param.province/d',0,'strip_tags,htmlspecialchars');
        $city = I('param.city/d',0,'strip_tags,htmlspecialchars');
        $district = I('param.district/d',0,'strip_tags,htmlspecialchars');
        $address = I('param.address/s','','strip_tags,htmlspecialchars');
        $postscript = I('param.postscript/s','','strip_tags,htmlspecialchars');
        $goods_id = I('param.goods_id/d',0,'strip_tags,htmlspecialchars');
        $buy_num = I('param.buy_num/d',0,'strip_tags,htmlspecialchars');
        $goods_pid = I('param.goods_pid/d',0,'strip_tags,htmlspecialchars');
        $pay_id = I('param.pay_id/d',0,'strip_tags,htmlspecialchars');
        $shipping_id = I('param.shipping_id/d',0,'strip_tags,htmlspecialchars');
        $pickup_point_id = I('param.pickup_point_id/d',0,'strip_tags,htmlspecialchars');
        $userId = I('param.user_id/d', 0, 'strip_tags,htmlspecialchars');
        $goods_attr_id = I('param.goods_attr_id/s', '', 'strip_tags,htmlspecialchars');
        $cart_ids = I('param.rec_ids/a', [], 'strip_tags,htmlspecialchars');
        $coupon_id= I('param.coupon_id/d', 0, 'strip_tags,htmlspecialchars');

        $mobile=str_replace(' ','',$mobile);
        $mobile=str_replace('-','',$mobile);
        $mobile=str_replace('(','',$mobile);
        $mobile=str_replace(')','',$mobile);

        $comeurl = I('param.comeurl/s',$_SERVER['HTTP_REFERER']);

        $address = str_replace("\r\n","",$address);
        $address = str_replace(chr(10),'',$address);
        $address = str_replace(chr(13),'',$address);
        $address = str_replace(chr(10).chr(10),'',$address);
        $address = str_replace(chr(13).chr(13),'',$address);

        //是否需要分单
        $needrebuild = false;


        if(!$userId){
            $result['statuscode'] = 300;
            $result['message'] = L('error-userdata');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }
//        if($consignee==''){
//            $result['statuscode'] = 300;
//            $result['message'] = L('order-err-consignee');
//            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
//        }else{
//            cookie('consignee',$consignee);
//        }
        if(!$consignee){
            $result['statuscode'] = 300;
            $result['message'] = L('order-err-consignee');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }
        if(!is_mobile($mobile)){
            $result['statuscode'] = 300;
            $result['message'] = L('order-err-mobile');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        if($province<=0 or $city<=0){
            $result['statuscode'] = 300;
            $result['message'] = L('order-err-at');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }
        if($address==''){
            $result['statuscode'] = 300;
            $result['message'] = L('order-err-address');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }
        if($pay_id<=0){
            $result['statuscode'] = 300;
            $result['message'] = L('order-err-payment');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }else{
            $paydata=M('payment')->field('pay_name,is_cod')->where('pay_id='.$pay_id.' and enabled=1')->limit(1)->find();
            if(empty($paydata)){
                $result['statuscode'] = 300;
                $result['message'] = L('order-err-payment');
                $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
            }
            $pay_name=$paydata['pay_name'];
            $is_cod = $paydata['is_cod'];
        }
        //判断物流配送  $shipping_id
        if($shipping_id<=0){
            $result['statuscode'] = 300;
            $result['message'] = L('order-err-shipping');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }else{
            //判断物流方式是否存在  ecs_shipping_new shipping_id, shipping_code, shipping_name, shipping_desc, support_cod, support_pickup, first_weight, first_fee, unit_weight, unit_fee, enabled
            $shippingdata=M('shipping_new')->field('shipping_id, shipping_code, shipping_name, support_pickup, first_fee')->where('shipping_id='.$shipping_id.' and enabled=1')->limit(1)->find();
            if(empty($shippingdata)){
                $result['statuscode'] = 300;
                $result['message'] = L('order-err-shipping-nothas');
                $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
            }else{
                $shipping_code=$shippingdata['shipping_code'];
                $shipping_name=$shippingdata['shipping_name'];
                $support_pickup=$shippingdata['support_pickup'];
                $first_fee=$shippingdata['first_fee'];
            }

            //判断该城市是否支持该配送  ecs_shipping_cityconfig id, city_name, city_id, shipping_id, is_default
            $where=array();
            $where['city_id'] = $city;
            $where['shipping_id']=$shipping_id;
            $chkhas=M('shipping_cityconfig')->field('id')->where($where)->limit(1)->find();
            if(empty($chkhas)){
                $result['statuscode'] = 300;
                $result['message'] = L('order-err-shipping-notsupport');
                $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
            }
            //判断配送费 ecs_shipping_feeconfig id, areaname, shipping_id, shipping_name, citys, first_weight, first_fee, unit_weight, unit_fee
            $where=array();
            $where['shipping_id']=$shipping_id;
            $where['citys']=array('like','%,'.$city.',%');
            $first_fee_city = M('shipping_feeconfig')->fetchSql(false)->where($where)->limit(1)->getField('first_fee');
            if(!is_numeric($first_fee_city)){
                if(empty($first_fee_city) or $first_fee_city===''){
                    $first_fee_city=$first_fee;
                }
            }
            $shipping_fee = $first_fee_city;
        }
        $is_pickup=0;
        if($support_pickup==1){
            if($pickup_point_id<=0){
                $result['statuscode'] = 300;
                $result['message'] = L('order-err-piuckup');
                $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
            }
            $is_pickup=1;
        }

        $couponAmount = 0;

        if ($coupon_id > 0) {
            $couponLog = M('new_coupon_logs')->where('id = ' . $coupon_id)->field('amount, forrange')->find();
            $couponAmount = $couponLog['amount'];
            $forrange = $couponLog['forrange'];
        }

        if($goods_id<=0 && $cart_ids == []){
            $result['statuscode'] = 300;
            $result['message'] = L('order-err-goods');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        } else if ($goods_id > 0) {

            $where=array();
            $where['is_on_sale']=1;
            $where['is_alone_sale']=1;
            $where['is_real']=1;
            $where['extension_code']='';
            $where['goods_id']=$goods_id;
            $goodsdata=M('goods')->field('goods_id, goods_sn, goods_name, goods_number, market_price, shop_price, goods_thumb, goods_img, original_img, cang_id, is_shipping, yongjin_bili, is_promote, promote_price, promote_start_date, promote_end_date')->where($where)->limit(1)->find();
            $shop_price = $goodsdata['shop_price'];
            $is_shipping = $goodsdata['is_shipping'];
            $goods_name = $goodsdata['goods_name'];
            $goods_sn = $goodsdata['goods_sn'];
            $cang_id = $goodsdata['cang_id'];
            $goods_stock = $goodsdata['goods_number'];
            $product_id = $goods_pid;
            $goods_number = $buy_num;
            $market_price = $goodsdata['market_price'];
            $goods_price = $goodsdata['shop_price'];
            $goods_attr = '';
            $goods_attr_id = '';

            $final_price = $goodsdata['shop_price'];
            $is_promote = $goodsdata['is_promote'];
            $promote_price=$goodsdata['promote_price'];
            $currenttime=time();
            $decval=$goodsdata['shop_price']-$goodsdata['promote_price'];
            if($is_promote==1){
                if($currenttime>=$goodsdata['promote_start_date'] and $currenttime<=$goodsdata['promote_end_date']){
                    if($decval>=0){
                        $final_price=min($promote_price,$shop_price);
                    }
                }
            }
            $split_money = round(($goodsdata['shop_price'] * $buy_num - $couponAmount)*$goodsdata['yongjin_bili']/100,0);

            $orderGoodsData = [];
            $fanGoodsData = [];
            if($goods_pid>0){
                $where=array();
                $where['goods_id'] = $goods_id;
                $where['product_id'] = $goods_pid;
                $proddata=M('products')->field('product_id, goods_id, goods_attr, product_sn, product_number, price')->where($where)->limit(1)->find();
                $shop_price = $proddata['price'];
                $final_price = $proddata['price'];
//                $goods_sn = $proddata['product_sn'];
                $goods_stock = $proddata['product_number'];
                $product_id = $goods_pid;
                $goods_price = $proddata['price'];
                $split_money = round(($goodsdata['shop_price'] * $buy_num - $couponAmount)*$goodsdata['yongjin_bili']/100,0);
                $goods_attr = $proddata['goods_attr'];
                $goods_attr_id = str_replace('|',',',$proddata['goods_attr']);
            }
            //判断库存
            if($buy_num>$goods_stock){
                $result['statuscode'] = 300;
                $result['message'] = L('order-err-notbuy');
                $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
            }
            $fan_goods_price = $final_price;
            $goods_amount = round($final_price*$buy_num,0);

            if($goods_amount<=0){
                $result['statuscode'] = 300;
                $result['message'] = L('order-err-notbuy-price');
                $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
            }

//            if($is_shipping==1){
//                $shipping_fee = 0;
//            }else{
//                $shipping_fee = 200;
//            }
            $order_amount=$goods_amount+$shipping_fee - $couponAmount;
            //初始化时间  ecs_shipping_days id, cang_id, region_id, mindays, maxdays, logistics, shippingnote
            $minday=1;
            $maxday=3;
            if($cang_id>0){
                $cangdata=M('shipping_days')->field('mindays, maxdays')->where('cang_id='.$cang_id.' and region_id='.$city)->limit(1)->find();
                if($cangdata){
                    $minday=$cangdata['mindays'];
                    $maxday=$cangdata['maxdays'];
                }
            }
        } else if ($cart_ids) {
            $where = [];
            $where['rec_id'] = ['in', $cart_ids];
            $cartGoods = M('cart')->where($where)
                ->field('goods_id, goods_sn, product_id, goods_name, goods_price, market_price, goods_number, goods_attr,goods_attr_id')
                ->order('rec_id desc')
                ->select();
            //
            $goods_amount = 0;
            $goodsData = [];

            $goodsCouponId = [];
            $goodsAmount = 0;
            $yongjinBili = [];
            foreach ($cartGoods as $k => $v) {
                $goods_amount += round($v['goods_price'] * $v['goods_number'],0);
                $goodsData[$k] = M('goods')->where('goods_id = ' . $v['goods_id'])->field('cang_id, yongjin_bili')->find();

                if ($coupon_id > 0) {
                    if ($forrange == 2) {
                        $checkgoodsid = ',' . $v['goods_id'] . ',';
                        $where = [];
                        $where['status'] = 1;
                        $where['forrange']=2;
                        $where['userid'] = $userId;
                        $where['forgoodsid'] = array('like', '%' . $checkgoodsid . '%');
                        $goodsCouponId[$k]['coupon_id'] = M('new_coupon_logs')->where($where)->getField('id');
                        $goodsCouponId[$k]['goods_id'] = $v['goods_id'];
                        $goodsCouponId[$k]['yongjin_bili'] = $goodsData[$k]['yongjin_bili'];
                        $goodsCouponId[$k]['goods_price'] = $v['goods_price'];
                    } elseif ($forrange == 0) {
                        $yongjinBili[$k] = $goodsData[$k]['yongjin_bili'];
                    }
                }

                $goodsAmount += $v['goods_price'] * $v['goods_number'];

                //order_goods表数据
                $orderGoodsData[$k]['goods_id'] = $v['goods_id'];
                $orderGoodsData[$k]['goods_name'] = $v['goods_name'];
                $orderGoodsData[$k]['goods_sn'] = $v['goods_sn'];
                $orderGoodsData[$k]['product_id'] = $v['product_id'];
                $orderGoodsData[$k]['goods_number'] = $v['goods_number'];
                $orderGoodsData[$k]['goods_price'] = $v['goods_price'];
                $orderGoodsData[$k]['split_money'] = round($v['goods_price'] * $goodsData[$k]['yongjin_bili']/100 * $v['goods_number'],0);
                $orderGoodsData[$k]['goods_attr'] = $v['goods_attr'];
                $orderGoodsData[$k]['send_number'] = 0;
                $orderGoodsData[$k]['is_real'] = 1;
                $orderGoodsData[$k]['extension_code'] = '';
                $orderGoodsData[$k]['parent_id'] = 0;
                $orderGoodsData[$k]['is_gift'] = 0;
                $orderGoodsData[$k]['goods_attr_id'] = $v['goods_attr_id'];
                $orderGoodsData[$k]['comment_state'] = 0;
                $orderGoodsData[$k]['shaidan_state'] = 0;
                $orderGoodsData[$k]['package_attr_id'] = '';
                $orderGoodsData[$k]['is_back'] = 0;
                $orderGoodsData[$k]['cost_price'] = $v['goods_price'];
                $orderGoodsData[$k]['promote_price'] = 0;
                $orderGoodsData[$k]['exclusive'] = -1;

                //返佣表数据
                $fanGoodsData[$k]['xd_user_id'] = $userId;
                $fanGoodsData[$k]['user_id'] = $userId;
                $fanGoodsData[$k]['goods_id'] = $v['goods_id'];
                $fanGoodsData[$k]['goods_name'] = $v['goods_name'];
                $fanGoodsData[$k]['product_id'] = $v['product_id'];
                $fanGoodsData[$k]['goods_num'] = $v['goods_number'];
                $fanGoodsData[$k]['split_money'] = round($v['goods_price'] * $goodsData[$k]['yongjin_bili']/100 * $v['goods_number'],0);
                $fanGoodsData[$k]['creat_time'] = time();
                $fanGoodsData[$k]['ok_time'] = 0;
                $fanGoodsData[$k]['desc'] = '';
                $fanGoodsData[$k]['is_pay'] = 0;
                $fanGoodsData[$k]['is_split'] = 0;
                $fanGoodsData[$k]['image'] = '';
                $fanGoodsData[$k]['yongjin_type'] = 0;
                $fanGoodsData[$k]['platform'] = '';
                $fanGoodsData[$k]['is_state_settle'] = 0;
                $fanGoodsData[$k]['type'] = 0;
                $fanGoodsData[$k]['pay_money'] = $v['goods_price'];
            }

            $cang = array_unique(array_column($goodsData, 'cang_id'));
            $cangNumber = count($cang);
            $minday=1;
            $maxday=3;
            if ( $cangNumber== 1) {
                if($cang[0] > 0){
                    $cangdata=M('shipping_days')->field('mindays, maxdays')->where('cang_id='.$cang[0].' and region_id='.$city)->limit(1)->find();
                    if($cangdata){
                        $minday=$cangdata['mindays'];
                        $maxday=$cangdata['maxdays'];
                    }
                }
            } elseif ($cangNumber >= 2) {
                $needrebuild = true;
            }

            //判断优惠是哪个商品
            if ($goodsCouponId) {
                $goodsCoupon = [];
                foreach ($goodsCouponId as $k => $v) {
                    if ($v['coupon_id'] == $coupon_id) {
                        $goodsCoupon[$k]['goods_id'] = $v['goods_id'];
                        $goodsCoupon[$k]['yongjin_bili'] = $v['yongjin_bili'];
                    }
                }
                $goodsCoupon = array_values($goodsCoupon);

                if (count($goodsCoupon) == 1) {
                    foreach ($orderGoodsData as $k => $v) {
                        if ($v['goods_id'] == $goodsCoupon[0]['goods_id']) {
                            $orderGoodsData[$k]['split_money'] = round(($v['goods_price'] * $v['goods_number'] - $couponAmount) * $goodsCoupon[0]['yongjin_bili']/100 ,0);
                        }
                    }

                    foreach ($fanGoodsData as $k => $v) {
                        if ($v['goods_id'] == $goodsCoupon[0]['goods_id']) {
                            $orderGoodsData[$k]['split_money'] = round(($v['pay_money'] * $v['goods_number'] - $couponAmount) * $goodsCoupon[0]['yongjin_bili']/100 ,0);
                            $orderGoodsData[$k]['pay_money'] = $v['pay_money'] - $couponAmount;
                        }
                    }
                }
            } elseif ($forrange == 0) {

                foreach ($orderGoodsData as $k => $v) {
                    $split_money = ($v['goods_price'] * $v['goods_number'] - $couponAmount * $v['goods_price'] * $v['goods_number'] / $goodsAmount) * $yongjinBili[$k] / 100;
                    $orderGoodsData[$k]['split_money'] = round($split_money,0);
                }

                foreach ($fanGoodsData as $k => $v) {
                    $split_money = ($v['pay_money'] * $v['goods_num'] - $couponAmount * $v['pay_money'] * $v['goods_num'] / $goodsAmount) * $yongjinBili[$k] / 100;
                    $fanGoodsData[$k]['split_money'] = round($split_money,0);
                    $fanGoodsData[$k]['pay_money'] = $v['pay_money'] - round(($v['pay_money'] * $v['goods_num'] - $couponAmount * $v['pay_money'] * $v['goods_num'] / $goodsAmount), 0);
                }
            }
            $order_amount= $goods_amount + $shipping_fee - $couponAmount;
        }


        //重构商品的属性值
        $db_goods_attr='';
        if($goods_attr!=''){
            $buy_attr = $goods_attr_id;
            $arr_buy_attr = explode(',',$buy_attr);
            $properties = get_goods_properties($goods_id);
            $spcdata=$properties['spe'];
            foreach ($spcdata as $key=>$vo) {
                $vals=$vo['values'];
                foreach ($vals as $kk=>$vv) {
                    if($vv['id']==$arr_buy_attr[$key]){
                        $spcdata[$key]['values'][$kk]['ischeck']=true;
                        $db_goods_attr==''?$db_goods_attr=$vo['name'].':'.$vv['label']:$db_goods_attr.="\n".$vo['name'].':'.$vv['label'];
                    }
                }
            }
        }
//        //初始化提货点
//        $pickup_point = 28;

        //初始化状态
        if($is_cod==1){
            $order_status=0;
            $shipping_status=0;
            $pay_status=1;
        }else{
            $order_status=0;
            $shipping_status=0;
            $pay_status=0;
        }

        //写主表
        $order_sn=date('mdHi').rand_string(4,1);
        $add_time = time();
        $data=array();
        $data['order_sn'] = $order_sn;
        $data['user_id'] = $userId;
        $data['order_status'] = $order_status;
        $data['shipping_status'] = $shipping_status;
        $data['pay_status'] = $pay_status;
        $data['consignee'] = $consignee;
        $data['country'] = 1;
        $data['province'] = $province;
        $data['city'] = $city;
        $data['district'] = $district;
        $data['address'] = $address;
        $data['zipcode'] = '';
        $data['tel'] = '';
        $data['mobile'] = $mobile;
        $data['email'] = '';
        $data['best_time'] = '';
        $data['sign_building'] = '';
        $data['postscript'] = $postscript;
        $data['shipping_id'] = $shipping_id;
        $data['shipping_name'] = $shipping_name;
        $data['pay_id'] = $pay_id;
        $data['pay_name'] = $pay_name;
        $data['defaultbank'] = '';
        $data['how_oos'] = '';
        $data['how_surplus'] = '';
        $data['pack_name'] = '';
        $data['card_name'] = '';
        $data['card_message'] = '';
        $data['inv_payee'] = '';
        $data['inv_content'] = '';
        $data['goods_amount'] = $goods_amount;
        $data['shipping_fee'] = $shipping_fee;
        $data['insure_fee'] = 0;
        $data['pay_fee'] = 0;
        $data['pack_fee'] = 0;
        $data['card_fee'] = 0;
        $data['money_paid'] = 0;
        $data['surplus'] = 0;
        $data['integral'] = 0;
        $data['integral_money'] = 0;
        $data['xiaofei_surplus'] = 0;
        $data['bonus'] = 0;
        $data['order_amount'] = $order_amount;
        $data['from_ad'] = 0;
        $data['referer'] = '网站直营';
        $data['add_time'] = $add_time;
        $data['confirm_time'] = 0;
        $data['pay_time'] = 0;
        $data['shipping_time'] = 0;
        $data['ok_time'] = 0;
        $data['pack_id'] = 0;
        $data['card_id'] = 0;
        $data['bonus_id'] = 0;
        $data['invoice_no'] = '';
        $data['extension_code'] = '';
        $data['extension_id'] = 0;
        $data['to_buyer'] = '';
        $data['pay_note'] = '';
        $data['agency_id'] = 0;
        $data['inv_type'] = '';
        $data['tax'] = 0;
        $data['is_separate'] = 0;
        $data['parent_id'] = 0;
        $data['discount'] = $couponAmount;
        $data['supplier_id'] = 0;
        $data['parent_order_id'] = 0;
        $data['rebate_id'] = 0;
        $data['rebate_ispay'] = 1;
        $data['tb_nick'] = '';
        $data['froms'] = 'h5';
        $data['is_pickup'] = $is_pickup;
        $data['pickup_point'] = $pickup_point_id;
        $data['vat_inv_company_name'] = '';
        $data['vat_inv_taxpayer_id'] = '';
        $data['vat_inv_registration_address'] = '';
        $data['vat_inv_registration_phone'] = '';
        $data['vat_inv_deposit_bank'] = '';
        $data['vat_inv_bank_account'] = '';
        $data['inv_consignee_name'] = '';
        $data['inv_consignee_phone'] = '';
        $data['inv_consignee_country'] = 1;
        $data['inv_consignee_province'] = 1;
        $data['inv_consignee_city'] = 1;
        $data['inv_consignee_district'] = 1;
        $data['inv_consignee_address'] = '';
        $data['inv_status'] = 'unprovided';
        $data['inv_remark'] = '';
        $data['inv_money'] = $order_amount;
        $data['inv_payee_type'] = '';
        $data['shipping_time_end'] = 0;
        $data['passwd_weixin'] = '';
        $data['pt_level'] = 0;
        $data['pt_price_status'] = 0;
        $data['pt_status'] = 0;
        $data['pt_lucky_order'] = 0;
        $data['pay_trade_no'] = '';
        $data['pay_method'] = '';
        $data['real_pay_money'] = 0;
        $data['is_print'] = 0;
        $data['kdniao_invoice_no'] = '';
        $data['is_cod'] = $is_cod;
        $data['minday'] = $minday;
        $data['maxday'] = $maxday;
        $order_id = M('order_info')->add($data);

//        写产品表
        if ($goods_id > 0) {
            $data=array();
            $data['order_id'] = $order_id;
            $data['goods_id'] = $goods_id;
            $data['goods_name'] = $goods_name;
            $data['goods_sn'] = $goods_sn;
            $data['product_id'] = $product_id;
            $data['goods_number'] = $goods_number;
            $data['market_price'] = $market_price;
            $data['goods_price'] = $final_price;
            $data['split_money'] = $split_money;
            $data['goods_attr'] = $db_goods_attr;
            $data['send_number'] = 0;
            $data['is_real'] = 1;
            $data['extension_code'] = '';
            $data['parent_id'] = 0;
            $data['is_gift'] = 0;
            $data['goods_attr_id'] = $goods_attr_id;
            $data['comment_state'] = 0;
            $data['shaidan_state'] = 0;
            $data['package_attr_id'] = '';
            $data['is_back'] = 0;
            $data['cost_price'] = $final_price;
            $data['promote_price'] = 0;
            $data['exclusive'] = -1;
            $rec_id = M('order_goods')->add($data);

            //保存佣金
            $time = time();

            $goods_name = addslashes($goods_name);
            $split_money = round($split_money);
            $data=array();
            $data['xd_user_id'] = $userId;
            $data['user_id'] = $userId;
            $data['order_id'] = $order_id;
            $data['goods_id'] = $goods_id;
            $data['goods_name'] = $goods_name;
            $data['product_id'] = $product_id;
            $data['goods_num'] = $buy_num;
            $data['pay_money'] = $fan_goods_price;
            $data['split_money'] = $split_money;
            $data['creat_time'] = $time;
            $data['ok_time'] = 0;
            $data['desc'] = '';
            $data['is_pay'] = 0;
            $data['is_split'] = 0;
            $data['image'] = '';
            $data['yongjin_type'] = 0;
            $data['platform'] = '';
            $data['is_state_settle'] = 0;
            $data['type'] = 0;
            $savemsg = M('fan_goods')->add($data);
        } else if ($cart_ids) {
            //写入订单goods
            foreach ($orderGoodsData as $k => $v) {
                $orderGoodsData[$k]['order_id'] = $order_id;
            }
            M('order_goods')->addAll($orderGoodsData);

            //写入返佣表
            foreach ($fanGoodsData as $k => $v) {
                $fanGoodsData[$k]['order_id'] = $order_id;
            }
            M('fan_goods')->addAll($fanGoodsData);

            //删除购物车数据
            $rec_id = implode(',', $cart_ids);
            M('cart')->delete($rec_id);

            //写入拆单记录
            if ($needrebuild) {
                $build = [];
                $build['order_id'] = $order_id;
                $build['order_sn'] = $order_sn;
                $build['isbuild'] = 0;
                M('order_rebuild')->add($build);
            }
        }


        //减库存
        change_order_goods_storage($order_id, true, 1);

        //为每一个订单生成一个支付日志记录
        $data=array();
        $data['order_id'] = $order_id;
        $data['order_amount'] = $order_amount;
        $data['order_type'] = 0;
        $data['is_paid'] = 0;
        $log_id = M('pay_log')->add($data);


        //写入短信发送记录
        $data=array();
        $data['order_id'] = $order_id;
        $data['issend'] = 0;
        $data['resdata'] = '';
        $savemsg = M('order_sms')->add($data);

        //写入订单推送记录
        $data=array();
        $data['order_id'] = $order_id;
        $data['ispush'] = 0;
        $data['resdata'] = '';
        $savemsg = M('order_push')->add($data);

        $result['message'] = L('order-success');
        $result['statuscode'] = 200;
        $result['order_sn'] = $order_sn;
        $result['amount'] = $order_amount;
        $this->ajaxReturn($result);
    }


    //获取用户订单
    public function Getuserorder(){
        $result = array('statuscode' => 200, 'message' => '');
        $skip = I('param.skip/d',0);
        $maxperpage = I('param.maxperpage/d',20);

        $user_id = I('param.user_id/d',0,'strip_tags,htmlspecialchars'); //主ID
        $composite_status = I('param.composite_status/d',-1,'strip_tags,htmlspecialchars');//月份   2020-08
        $datetype = I('param.datetype/d',0,'strip_tags,htmlspecialchars');//0全部 1 当天 2本周   3本月  -1自定义
        $monthkey = I('param.monthkey/s','','strip_tags,htmlspecialchars');//月份   2020-08
        $startdate = I('param.startdate/s','','strip_tags,htmlspecialchars'); //自定义日期
        $enddate = I('param.enddate/s','','strip_tags,htmlspecialchars');//自定义日期
        $keyword = I('param.keyword/s','','strip_tags,htmlspecialchars');
        $keyword = trim($keyword);

        $timestamp = I('param.timestamp/d',0,'strip_tags,htmlspecialchars');
        $sign = I('param.sign/s','','strip_tags,htmlspecialchars');
//        $user_id=10098;

        /*$hmackey=C('hmackey');
        if (function_exists('hash_hmac') and $user_id>0 and $timestamp>0 and $sign!='') {
            $checkstr=$timestamp.'-user-id-'.$user_id;
            $checksign = hash_hmac("sha1", $checkstr, $hmackey,false);
            if($checksign!=$sign){
                $checksign = hash_hmac("sha256", $checkstr, $hmackey,false);
                if($checksign!=$sign){
                    $result['statuscode'] = 300;
                    $result['message'] = L('global_error_api');
                    $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
                }
            }
        }*/

        $rooturl = C('mainroot').'/';
        $approoturl = C('approot').'/';

        if($user_id<=0){
            $result['statuscode'] = 300;
            $result['message'] = '请登陆后继续操作';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }else{
            $user_rank=M('users')->where('user_id='.$user_id)->limit(1)->getField('user_rank');
        }

        //加载列表
        $db = M('order_info');
        $where['user_id']=$user_id;
        if($keyword!=''){
            $where['order_sn|consignee|address|mobile'] =array('like','%'.$keyword.'%');
        }
        switch ($composite_status){
            case -1:
                break;
            case 100:
                $where['order_status']=0;
                $where['pay_status']=array('in','0,1');
                break;
            case 101:
                $where['order_status']=array('in','1,5,6');
                $where['pay_status']=array('in','1,2');
                $where['shipping_status']=array('in','0,1,3,5');
                break;
            case 105:
                $where['order_status']=array('in','1,5');
                $where['pay_status']=2;
                $where['shipping_status']=2;
                break;
            case 102:
                $where['order_status']=array('in','2,3,4');
                break;
        }
        $list = $db->fetchSql(false)
            ->field('order_id, order_sn, user_id, order_status, shipping_status, pay_status, consignee, mobile, shipping_id, shipping_name, pay_id, pay_name, goods_amount, shipping_fee, (goods_amount + shipping_fee + insure_fee + pay_fee + pack_fee + card_fee + tax - discount) AS order_total_amount, add_time, confirm_time, pay_time, shipping_time, ok_time, froms')
            ->where($where)
            ->order('add_time desc')
            ->limit($skip,$maxperpage)
            ->select();
        $timeformat=C('timeformat');
        foreach($list as $key=>$vo){
            $list[$key]['goods_amount'] = price_format($vo['goods_amount'],0);
            $list[$key]['shipping_fee'] = price_format($vo['shipping_fee'],0);
            $list[$key]['order_total_amount'] = price_format($vo['order_total_amount'],0);
            $list[$key]['mobile'] = '+7 '.$vo['mobile'];

            $list[$key]['add_time'] = date($timeformat,$vo['add_time']);
            if($vo['confirm_time']>0){
                $list[$key]['confirm_time'] = date($timeformat,$vo['confirm_time']);
            }
            if($vo['pay_time']>0){
                $list[$key]['pay_time'] = date($timeformat,$vo['pay_time']);
            }
            if($vo['shipping_time']>0){
                $list[$key]['shipping_time'] = date($timeformat,$vo['shipping_time']);
            }
            if($vo['ok_time']>0){
                $list[$key]['ok_time'] = date($timeformat,$vo['ok_time']);
            }
            $order_status = $vo['order_status'];
            $shipping_status = $vo['shipping_status'];
            $pay_status = $vo['pay_status'];
            $ok_time = $vo['ok_time'];
            $shipping_time = $vo['shipping_time'];

            //综合判断该订单有没有退货信息，主表没有货品信息，所以现行判断该订单是否有退货，然后在具体判断商品货品是否有退货
            $checkorderback=M('back_order')->field('back_id')->where('order_id='.$vo['order_id'].' and back_type=1')->select();
            $arrback_id=array();
            if($checkorderback){
                foreach ($checkorderback as $kk=>$vv) {
                    $arrback_id[]=$vv['back_id'];
                }
            }
            $arrback_id[]=-1;
            //读取订单商品
            $order_total_count = 0;
            $goodslist=M('order_goods')->field('ecs_order_goods.rec_id, ecs_order_goods.goods_id, ecs_order_goods.goods_name, ecs_order_goods.goods_sn, ecs_order_goods.product_id, ecs_order_goods.goods_number, ecs_order_goods.goods_price, ecs_order_goods.goods_attr, ecs_order_goods.goods_attr_id, ecs_order_goods.is_back, ecs_order_goods.promote_price, ecs_order_goods.comment_state, ecs_goods.goods_thumb, ecs_products.product_sn')
                ->join('LEFT JOIN ecs_goods ON ecs_goods.goods_id = ecs_order_goods.goods_id')
                ->join('LEFT JOIN ecs_products ON ecs_products.product_id = ecs_order_goods.product_id')
                ->where('order_id='.$vo['order_id'])->order('rec_id asc')->select();
            foreach ($goodslist as $kk=>$vv) {
                $goods_attr = str_replace("\n","",$vv['goods_attr']);
                $goods_attr = str_replace(chr(10),'',$goods_attr);
                $goodslist[$kk]['goods_attr'] = $goods_attr;

                if($vv['promote_price']>0){
                    $goods_price=$vv['promote_price'];
                }else{
                    $goods_price=$vv['goods_price'];
                }
                $goodslist[$kk]['goods_price'] = price_format($goods_price,0);
                $goodslist[$kk]['subtotal'] = price_format($goods_price*$vv['goods_number'],0);

                $goodslist[$kk]['goods_thumb'] = $rooturl.$vv['goods_thumb'];

                //是否能够退货
                $back_code='none';
                $subwhere=array();
                $subwhere['back_id']=array('in',$arrback_id);
                $subwhere['goods_id']=$vv['goods_id'];
                if($vv['product_id']>0){
                    //目前退货里面没有货品ID，所以还需要增加货品ID0的判断
                    $pids=array(0,$vv['product_id']);
                    $subwhere['product_id']=array('in',$pids);
                }
                $checkgoodsback=M('back_goods')->field('rec_id')->where($subwhere)->limit(1)->find();
                if($checkgoodsback){
                    $back_code='detail';
                }else{
                    $limitday=14;
                    $backlimittime=time()-$limitday*86400;
                    if(($ok_time>0 and $order_status==5 and $shipping_status==2 and $pay_status==2 and $ok_time>=$backlimittime) or ($shipping_time>0 and $order_status==5 and $shipping_status==1 and $pay_status==2)){
                        $back_code='can';
                    }
                }
                $goodslist[$kk]['back_code'] = $back_code;

                $order_total_count++;
            }

            $list[$key]['order_total_count'] = $order_total_count;
            $list[$key]['goodslist'] = $goodslist;

            //当前状态支持的操作
            $payurl='';
            $handler=array();
            if($vo['order_status']==0){//未支付状态  支付   取消
                if($vo['pay_status']==0){
                    $out_trade_no=M('pay_log')->where('order_id='.$vo['order_id'])->limit(1)->getField('log_id');
                    if($vo['pay_id']==1){
                        $payurl = $approoturl.'tonglian_pay/pay.php?out_trade_no='.$out_trade_no;
                    }elseif ($vo['pay_id']==3){
                        $payurl = $approoturl.'paybox_pay/pay.php?out_trade_no='.$out_trade_no;
                    }elseif ($vo['pay_id']==8){
                        $payurl = $approoturl.'kassa24_pay/pay.php?out_trade_no='.$out_trade_no;
                    }elseif ($vo['pay_id']==10){
                        $payurl = $approoturl.'epay_pay/pay.php?out_trade_no='.$out_trade_no;
                    }
                    $handler[] = array('btn'=>'pay_money','name'=>L('order_pay_money'),'info'=>array('out_trade_no'=>$out_trade_no));
                }

                $handler[] = array('btn'=>'cancel','name'=>L('order_cancel'));
                $handler[] = array('btn'=>'view_order','name'=>L('order_view_order'),'info'=>array());
            }elseif ($vo['order_status']==1 or $vo['order_status']==5 or $vo['order_status']==6){
                //已经确认或者已经发货
                if($vo['shipping_status']==1){//已发货  查看物流
                    $handler[] = array('btn'=>'view_wuliu','name'=>L('order_view_wuliu'));
                }elseif ($vo['shipping_status']==2){// 已签收   晒单   查看物流
                    foreach ($goodslist as $kk=>$vv) {
                        if (!$vv['comment_state']) {
                            $handler[] = array('btn'=>'comment_shaidan','name'=>L('order_comment_shaidan'),'info'=>array());
                            break;
                        }
                    }
                    $handler[] = array('btn'=>'view_wuliu','name'=>L('order_view_wuliu'));
                }else{
                    if ($vo['pay_status'] == 0) {
                        $out_trade_no=M('pay_log')->where('order_id='.$vo['order_id'])->limit(1)->getField('log_id');
                        if($vo['pay_id']==1){
                            $payurl = $approoturl.'tonglian_pay/pay.php?out_trade_no='.$out_trade_no;
                        }elseif ($vo['pay_id']==3){
                            $payurl = $approoturl.'paybox_pay/pay.php?out_trade_no='.$out_trade_no;
                        }elseif ($vo['pay_id']==8){
                            $payurl = $approoturl.'kassa24_pay/pay.php?out_trade_no='.$out_trade_no;
                        }elseif ($vo['pay_id']==10){
                            $payurl = $approoturl.'epay_pay/pay.php?out_trade_no='.$out_trade_no;
                        }
                        $handler[] = array('btn'=>'pay_money','name'=>L('order_pay_money'),'info'=>array('out_trade_no'=>$out_trade_no));
                    }elseif ($vo['pay_status'] == 2){
                        $checkrefund = M('back_order')->field('status_back,back_id')->where('order_id='.$vo['order_id'].' and back_type=4')->limit(1)->find();
                        if($checkrefund){
                            $handler[] = array('btn'=>'tk','name'=> L('order_refunddetail') ,'info'=>array('tkstatus' => 1,'back_id' => $checkrefund['back_id']));
                        }else{
                            $handler[] = array('btn'=>'tk','name'=> L('order_refund') ,'info'=>array('tkstatus' => 0));
                        }
                    }else{
                        $handler[] = array('btn'=>'cancel','name'=>L('order_cancel'));
                    }
                }
                $handler[] = array('btn'=>'view_order','name'=>L('order_view_order'),'info'=>array());
            }elseif($vo['order_status']==2){//取消
                $handler[] = array('btn'=>'view_order','name'=>L('order_status_cancel'),'info'=>array());
            }elseif($vo['order_status']==3){//无效
                $handler[] = array('btn'=>'view_order','name'=>L('order_status_invalid'),'info'=>array());
            }elseif($vo['order_status']==4){//退款
                $handler[] = array('btn'=>'view_order','name'=>L('order_status_refund'),'info'=>array());
            }


            $list[$key]['payurl'] = $payurl;
            $list[$key]['handler'] = $handler;
        }
        $pagecount = count($list);
        $pagetotalcount = $db->fetchSql(false)->where($where)->count('order_id');

        if($list){
            $statuscode = 200;
            //如果当页数量小于每页数量，则代表最后一页
            if($pagecount<$maxperpage){
                $message= 'Last';
            }else{
                $message='Success';
            }
        }else{
            $statuscode = 300;
            if($skip==0){
                $message=L('g-nodata');
            }else{
                $message='Last';
            }
        }
        $skip = $skip+$maxperpage;

        $result['statuscode'] = $statuscode;
        $result['message'] = $message;
        $result['skip'] = $skip;
        $result['pagecount'] = $pagecount;
        $result['pagetotalcount'] = $pagetotalcount;
        $result['list'] = $list;
//        print_r($list);
//        exit;

        $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
    }

    //獲取訂單詳情
    public function getOrderDetail ()
    {
        $result = array('statuscode' => 200, 'message' => '');

        $orderId = I('param.order_id/d',0);
        $userId = I('param.user_id/d',0);

        if($userId <= 0){
            $result['statuscode'] = 300;
            $result['message'] = 'Пожалуйста, залогиньтесь для продолжения';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        $rooturl = C('mainroot').'/';
        $approoturl = C('approot').'/';

        $timeformat=C('timeformat');

        if ($orderId) {
            $order = M('order_info')->where('order_id = ' . $orderId)
                ->field('order_sn, order_status, order_status, shipping_status, pay_status, consignee, mobile, 
                shipping_id, shipping_name, pay_id, pay_name, goods_amount, shipping_fee, 
                (goods_amount + shipping_fee + insure_fee + pay_fee + pack_fee + card_fee + tax - discount) AS order_total_amount, 
                add_time, confirm_time, pay_time, shipping_time, ok_time, froms, province, city, district, address')
                ->find();

            $order['addtime'] = date($timeformat,$order['add_time']);
            $order['goods_amount'] = price_format($order['goods_amount'], 0);
            $order['order_total_amount'] = price_format($order['order_total_amount'], 0);
            $order['shipping_fee'] = price_format($order['shipping_fee'], 0);
            $order['province'] = getRegionName($order['province']);
            $order['city'] = getRegionName($order['city']);
            if ($order['district']) {
                $order['district'] = getRegionName($order['district']);
            }

            $goods = M('order_goods')->where('order_id = ' . $orderId)
                ->field('goods_name, goods_id, goods_number, goods_attr, goods_price')
                ->select();

            foreach ($goods as $k => $v) {
                $goods_thumb = M('goods')->where('goods_id = ' . $v['goods_id'])->field('goods_thumb')->find();
                $goods[$k]['thumb'] = $rooturl . $goods_thumb['goods_thumb'];
                $goods[$k]['goods_price'] = price_format($v['goods_price'], 0);
            }

            $order['goods'] = $goods;
            $result['message'] = 'OK';
            $result['data'] = $order;
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }
    }

    /**
     * 取消订单
     */
    public function cancelOrder ()
    {
        $result = array('statuscode' => 200, 'message' => '');

        $orderId = I('param.order_id/d',0);
        $userId = I('param.user_id/d',0);

        if ($orderId <= 0 || $userId <= 0) {
            $result['statuscode'] = 300;
            $result['message'] = L('user-Illegal-operation');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        $data['order_status'] = 2;
        $res = M('order_info')->where('order_id = ' . $orderId)->save($data);
        if ($res) {
            $result['message'] = 'Отменить успех';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        } else {
            $result['statuscode'] = 300;
            $result['message'] = 'Не удалось отменить заказ';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }
    }

    /**
     * 获取支付方式
     */
    public function getPaymentMsg ()
    {
        $result = array('statuscode' => 200, 'message' => '');

        $pay_id = I('param.pay_id/d',0);

        $payCode = M('payment')->where('pay_id = ' . $pay_id)->getField('pay_code');

        if ($payCode) {
            $result['desc'] = L('res-paypending-' . $payCode);
            $result['pay_code'] = $payCode;
            $result['message'] = 'OK';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        } else {
            $result['statuscode'] = 300;
            $result['message'] = 'Способ оплаты не найден';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }
    }
}