<?php


namespace Api\Controller;


use http\Env\Request;

class GoodsController extends ApiBaseController
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 获取分类商品列表
     */
    public function getGoodsListByCate ()
    {
        $result = array('statuscode' => 200, 'message' => '');
        $skip = I('param.skip/d',0);
        $maxperpage = I('param.maxperpage/d',20);

        $cate_id = I('param.cate_id/d',0,'strip_tags,htmlspecialchars');
        $order = I('param.order/s', '','strip_tags,htmlspecialchars');
        $keyword = I('param.keyword/s', '','strip_tags,htmlspecialchars');
        $keyword = trim($keyword);

        $rooturl = C('mainroot').'/';
        $approoturl = C('approot').'/';

        $where['is_delete'] = 0;
        $where['is_on_sale'] = 1;
        $where['is_real'] = 1;
        if ($cate_id) {
            $where['cat_id'] = $cate_id;
        } elseif ($keyword) {
            //关键字
            $map['cat_name'] = ['like', '%' . $keyword . '%'];
            $cate = M('category')->where($map)->field('cat_id')->order('cat_id desc')->select();
            $cate = array_column($cate, 'cat_id');
            if ($cate) {
                $where['cat_id'] = ['in', $cate];
            }
        }

        $orderstr = '';
        if ($order == 'price') {
            $orderstr .= 'shop_price desc';
        } elseif ($order == 'sales') {
            $orderstr .= 'sales_volume_base desc';
        }
        $field = 'goods_id, goods_name, is_promote, shop_price, promote_price, promote_start_date, promote_end_date, goods_sn, goods_thumb, cang_id, sales_volume_base';
        $goods = M('goods')->where($where)->field($field)->order($orderstr)->limit($skip,$maxperpage)->select();

        if ($goods) {
            foreach ($goods as $key => $val) {
                //获取仓名称
                $goods[$key]['cang'] = $this->getCangMsg($val['cang_id'])['showkeyname'];

                //获取销量
                $join_where['ecs_order_goods.goods_id'] = $val['goods_id'];
                $join_where['ecs_order_info.order_status'] = array('in','0,1,5,6');
                $sale_num = M('order_goods')->join('LEFT JOIN ecs_order_info ON ecs_order_info.order_id = ecs_order_goods.order_id')
                    ->where($join_where)->sum('goods_number');
                $sales = intval($sale_num) + intval($val['sales_volume_base']);
                $goods[$key]['sales'] = $sales;

                $time = time();
                if ($val['is_promote'] == 1 && $val['promote_price'] > 0) {
                    if ($val['promote_start_date'] > $time || $val['promote_end_date'] < $time) {
                        unset($goods[$key]);
                    } else {
                        $price = min($val['shop_price'], $val['promote_price']);
                        $goods[$key]['price'] = price_format($price, 0);
                    }
                } else {
                    $goods[$key]['goods_thumb'] = $rooturl . $goods[$key]['goods_thumb'];
                    $goods[$key]['price'] = price_format($val['shop_price'], 0);
                }
            }
        }

//        array_multisort($order_data,SORT_DESC,$goods);

        if($goods){
            $statuscode = 200;
        }else{
            $statuscode = 300;
            if($skip==0){
                $message=L('g-nodata');
            }else{
                $message='Last';
            }
        }

        $skip = $skip+$maxperpage;

        $result['skip'] = $skip;
        $result['statuscode'] = $statuscode;
        $result['message'] = $message;
        $result['data'] = $goods;

        $this->ajaxReturn($result, 'JSON');
    }

    /**
     * 商品詳情
     */
    public function getGoodsDetail ()
    {
        $result = array('statuscode' => 200, 'message' => '');

        $goods_id = I('param.goods_id/d', 0,'strip_tags,htmlspecialchars');
        $user_id = I('param.user_id/d', 0,'strip_tags,htmlspecialchars');

        $rooturl = C('mainroot').'/';
        $approoturl = C('approot').'/';

        if ($goods_id <= 0) {
            $result['statuscode'] = 300;
            $result['message'] = L('user-Illegal-operation');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        $db = M('goods');
        $where['goods_id'] = $goods_id;

        $field = 'goods_id, goods_name, goods_number, is_promote, shop_price, promote_price, market_price, goods_sn, goods_thumb, 
                 cang_id, goods_desc, original_img, goods_img, promote_start_date, promote_end_date, goods_type';
        $detail = $db->where($where)->field($field)->find();

        // 检测用户是否收藏此商品
        $collect = 0;
        if ($user_id) {
            $where = [];
            $where['user_id'] = $user_id;
            $where['goods_id'] = $goods_id;
            $isCollect = M('collect_goods')->where($where)->find();
            if ($isCollect) {
                $collect = 1;
            }
        }

        //基本数据处理
        $detail['shop_price'] = price_format($detail['shop_price'], 0);
        $detail['market_price'] = price_format($detail['market_price'], 0);
        $detail['promote_price'] = price_format($detail['promote_price'], 0);
        $detail['original_img'] = $rooturl . $detail['original_img'];
        $detail['goods_img'] = $rooturl . $detail['goods_img'];
        $detail['goods_thumb'] = $rooturl . $detail['goods_thumb'];
        $detail['is_collect'] = $collect;

        $currenttime = time();
        $discount=0;
        $decval=$detail['shop_price']-$detail['promote_price'];
        if ($detail['is_promote'] == 1) {
            if($currenttime < $detail['promote_start_date'] or $currenttime > $detail['promote_end_date']){
                $is_promote=0;
            }else{
                $final_price=min($detail['promote_price'], $detail['shop_price']);
                $discount = round($decval/$detail['shop_price']*100,0);
            }
        } else {
            $final_price = price_format( $detail['shop_price'], 0);
        }
        $detail['discount'] = $discount;
        $detail['final_price'] = number_format($final_price,0,'.','');

        //获取商品属性
        $properties = [];
        if ($detail['goods_type'] > 0) {
            $properties = getGoodsAttr($goods_id);
//            $properties = get_goods_properties($goods_id);
        }
        $detail['properties'] = $properties;

        //獲取倉信心
        $cangMsg = $this->getCangMsg($detail['cang_id']);
        $detail['cang_name'] = $cangMsg['cang_name'];
        $detail['cang_showkeyname'] = $cangMsg['showkeyname'];

        //獲取swiper圖片
        $swiperImg = $this->getGoodsSwipers($goods_id);
        $detail['swiper_img'] = $swiperImg;

        //優惠券
        $detail['coupons'] = $this->getGoodsCoupons($goods_id);

        //选择地区
        $detail['provice'] = $this->getAreaData();

        $result['message'] = 'OK';
        $result['data'] = $detail;
        return $this->ajaxReturn($result);
    }

    public function calShipping ()
    {
        $result = array('statuscode' => 200, 'message' => '');
        $city_id = I('param.city_id/d',0);
        $cang_id = I('param.cang_id/d',0);

        if($cang_id <= 0 or $city_id<=0){
            $result['statuscode'] = 300;
            $result['message'] = L('shippingdata-err-data');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }
        $aging='';
        $shippingdata = M('shipping_days')->field('mindays, maxdays, logistics, shippingnote')->fetchSql(false)->where('cang_id='.$cang_id.' and region_id='.$city_id)->find();
        if($shippingdata){
            if($shippingdata['shippingnote']!=''){
                $aging=$shippingdata['shippingnote'];
            }else{
                if($shippingdata['mindays']>0 and $shippingdata['maxdays']>0){
                    if($shippingdata['logistics']!=''){
                        $aging = L('shippingdata-aging-all',array('mindays'=>$shippingdata['mindays'],'maxdays'=>$shippingdata['maxdays'],'logistics'=>$shippingdata['logistics']));
                    }else{
                        $aging = L('shippingdata-aging',array('mindays'=>$shippingdata['mindays'],'maxdays'=>$shippingdata['maxdays']));
                    }
                }else{
                    $aging = L('shippingdata-default-shipping');
                }
            }
        }else{
            $aging = L('shippingdata-default-shipping');
        }
        $result['statuscode'] = 200;
        $result['message'] = 'OK';
        $result['aging'] = $aging;
        $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
    }

    /**
     * 获取购物车
     */
    public function getUserCart ()
    {
        $result = array('statuscode' => 200, 'message' => '');

        $user_id = I('param.user_id/d', 0);

        $rooturl = C('mainroot').'/';

        $field = 'rec_id, goods_id, goods_sn, product_id, goods_name, goods_price, market_price, promote_price, goods_number, goods_attr, goods_attr_id, can_handsel';
        $list = M('cart')->where('user_id = ' . $user_id)->field($field)->order('add_time desc')->select();
        foreach ($list as $k => $v) {
            //查询商品是否下架
            $isOffShelf = M('goods')
                ->where('goods_id = ' . $v['goods_id'])
                ->field('is_on_sale, is_promote, shop_price, promote_price, promote_start_date, promote_end_date, goods_thumb')
                ->find();
            $list[$k]['goods_thumb'] = $rooturl . $isOffShelf['goods_thumb'];

            if ($isOffShelf['is_on_sale'] == 1) {
                //判断价格是否有变动
                if ($v['product_id'] > 0) {
                    $price = M('products')->where('product_id = ' . $v['product_id'])->field('price')->find();
                    if ($price['price'] != $v['goods_price']) {
                        $list[$k]['goods_price'] = price_format($price['price'], 0);
                    }
                } else {
                    $currenttime = time();
                    if ($isOffShelf['is_promote'] == 1) {
                        if($currenttime < $isOffShelf['promote_start_date'] or $currenttime > $isOffShelf['promote_end_date']){
                            if ($isOffShelf['shop_price'] != $v['goods_price']) {
                                $list[$k]['goods_price'] = price_format($isOffShelf['shop_price'], 0);
                            }
                        }else{
                            $final_price = min($isOffShelf['promote_price'], $isOffShelf['shop_price']);
                            if ($final_price != $v['goods_price']) {
                                $list[$k]['goods_price'] = price_format($final_price, 0);
                            }
                        }
                    } else {
                        if ($isOffShelf['shop_price'] != $v['goods_price']) {
                            $list[$k]['goods_price'] = price_format($isOffShelf['shop_price'], 0);
                        }
                    }
                }
            } else {
                M('cart')->where('rec_id = ' . $v['rec_id'])->delete();
                unset($list[$k]);
            }
            $list[$k]['goods_price'] = price_format($v['goods_price'], 0);
            $list[$k]['market_price'] = price_format($v['market_price'], 0);
            $list[$k]['promote_price'] = price_format($v['promote_price'], 0);
            $list[$k]['total_price'] = price_format($v['goods_price'], 0) * $v['goods_number'];
        }
        $result['statuscode'] = 200;
        $result['message'] = 'OK';
        $result['data'] = $list;
        $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
    }

    /**
     * 添加购物车
     */
    public function addCart ()
    {
        $result = array('statuscode' => 200, 'message' => '');

        $data = I('post.');

        if (!$data) {
            $result['statuscode'] = 300;
            $result['message'] = 'Незаконная операция';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }
        //查询同一商品是否存在
        $sameWhere = [];
        $sameWhere['user_id'] = $data['user_id'];
        $sameWhere['goods_id'] = $data['goods_id'];
        $sameWhere['product_id'] = $data['product_id'];
        $product = M('cart')->where($sameWhere)->limit(1)->find();
        if ($product) {
            //商品存在，加数
            M('cart')->where('rec_id = ' . $product['rec_id'])->setInc('goods_number', $data['goods_number']);
        } else {
            //查商品属性名
            $where = [];
            $where['ecs_goods_attr.goods_attr_id'] = array('in', $data['goods_attr_id']);
            $row = M('goods_attr')
                ->join('LEFT JOIN ecs_attribute ON ecs_attribute.attr_id = ecs_goods_attr.attr_id')
                ->field('ecs_goods_attr.attr_value, ecs_attribute.attr_name')
                ->where($where)
                ->select();
            $goods_attr = '';
            foreach ($row as $k => $v) {
                $goods_attr .= $v['attr_name'] . ':' . $v['attr_value'] . ' ';
            }
            $data['goods_attr'] = $goods_attr;
            $data['split_money'] = 0;
            $data['add_time'] = time();
            $data['package_attr_id'] = '';
            $data['is_real'] = 1;
            $data['is_shipping'] = 1;

            $cart = M('cart');
            $cart->add($data);
        }

        $result['statuscode'] = 200;
        $result['message'] = 'Добавлено успешно';
        $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
    }

    /**
     * 改变购物车选中状态
     */
    public function cartSelected ()
    {
        $result = array('statuscode' => 200, 'message' => '');

        $cartIds = I('param.cart_ids/a', []);
        $user_id = I('param.user_id/d', 0);

        $recIds = M('cart')->where('user_id = ' . $user_id)->field('rec_id')->order('add_time desc')->select();

        foreach ($recIds as $k => $v) {
            if (in_array($v['rec_id'], $cartIds)) {
                $data['can_handsel'] = 1;
            } else {
                $data['can_handsel'] = 0;
            }
            M('cart')->where('rec_id = ' . $v['rec_id'])->save($data);
        }

        $result['statuscode'] = 200;
        $result['message'] = 'OK';
        $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
    }
    /**
     * 删除购物车商品
     */
    public function delCartGoods ()
    {
        $result = array('statuscode' => 200, 'message' => '');

        $data = I('post.rec_ids/a', []);

        if (!$data) {
            $result['statuscode'] = 300;
            $result['message'] = 'Незаконная операция';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        $recIds = implode(',', $data);
        $res = M('cart')->delete($recIds);

        if ($res) {
            $result['statuscode'] = 200;
            $result['message'] = 'успешно удален';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        } else {
            $result['statuscode'] = 500;
            $result['message'] = 'не удалось удалить';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }
    }

    /**
     * 购物车数量
     */
    public function changeCartGoodsNumber ()
    {
        $result = array('statuscode' => 200, 'message' => '');

        $recId = I('post.rec_id/d', 0);
        $goodsNum = I('post.goods_number/d', 0);

        if($recId <= 0 or $goodsNum <= 0){
            $result['statuscode'] = 300;
            $result['message'] = 'Незаконная операция';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        $cart = M('cart');
        $data['goods_number'] = $goodsNum;
        $cart->where('rec_id = ' . $recId)->save($data);

        $result['message'] = 'OK';
        $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
    }

    /**
     * 获取城市名称
     */
    public function getCity ()
    {
        $result = array('statuscode' => 200, 'message' => '');

        $provice_id = I('param.provice_id/d', 3,'strip_tags,htmlspecialchars');

        $where=array();
        $where['parent_id'] = $provice_id;
        $list = M('region')->fetchSql(false)->field('region_id,region_name')->where($where)->order('region_id asc')->select();

        if ($list) {
            $result['message'] = '获取成功';
            $result['data'] = $list;
        } else {
            $result['statuscode'] = 300;
            $result['message'] = '暂无数据';
        }
        return $this->ajaxReturn($result);
    }

    /**
     * 省
     *
     * @return mixed
     */
    public function getAreaData ()
    {
        //加载省州
        $where=array();
        $where['parent_id'] = 1;
        $list = M('region')
            ->fetchSql(false)
            ->field('region_id,region_name')
            ->where($where)->order('region_id asc')->select();
        return $list;
    }

    /**
     * 獲取倉信息
     *
     * @param $id
     * @return array|bool|mixed|string|null1
     */
    public function getCangMsg ($id)
    {
        $where['id'] = $id;
        $cang = M('goods_cang')->where($where)->field('showkeyname, cang_name')->find();
        return $cang;
    }

    /**
     *购买商品信息
     */
    public function getBuyGoodsMsg ()
    {
        $result = array('statuscode' => 200, 'message' => '');

        $recIds = I('param.rec_ids/a', [],'strip_tags,htmlspecialchars');
        $goodsId = I('param.goods_id/d', 0,'strip_tags,htmlspecialchars');
        $buyNum = I('param.buy_num/d', 0,'strip_tags,htmlspecialchars');
        $productId = I('param.product_id/d', 0,'strip_tags,htmlspecialchars');
        $cityId = I('param.city_id/d', 0,'strip_tags,htmlspecialchars');
        $userId = I('param.user_id/d', 0,'strip_tags,htmlspecialchars');

        $rooturl = C('mainroot').'/';

        $where = [];
        $shipping = '';
        $goods = [];
        //购物车进入
        if ($recIds) {
            $recIdStr = implode(',', $recIds);
            $where['rec_id'] = ['in', $recIdStr];
            $field = 'goods_id, goods_name, goods_price, goods_number';
            $goods = M('cart')->where($where)->field($field)->select();
//            var_dump($goods);die;
            $goodsIdStr = [];
            $coupon = [];
            foreach ($goods as $k => $v) {
                $goodsIdStr[] = $v['goods_id'];

                //获取优惠券
                $coupon[] = $this->getUserCouponForGoods($userId, $v['goods_id'], $v['goods_price'], $v['goods_number']);

                //获取商品图
                $goodsThumb = M('goods')->where('goods_id = ' . $v['goods_id'])->field('goods_thumb')->find();
                $goods[$k]['goods_thumb'] = $rooturl . $goodsThumb['goods_thumb'];
                $goods[$k]['goods_price'] = price_format($v['goods_price'], 0);
            }

            $ret = [];
            foreach ($coupon as $k => $v) {
                foreach ($v['couponlist'] as $val) {
                    $ret[] = $val;
                }
            }
            $is_use = array_column($ret,'is_use');
            array_multisort($is_use,SORT_DESC,$ret);

            $coupon = [];
            if($ret){
                $coupon['couponlist'] = $ret;
                $coupon['hascoupon'] = true;
            }else{
                $coupon['couponlist'] = $ret;
                $coupon['hascoupon'] = false;
            }

            $goodsIdStr = implode(',', $goodsIdStr);
            $cwhere['goods_id'] = ['in', $goodsIdStr];
            $cangIdArr = M('goods')->where($cwhere)->field('cang_id')->select();

            $cangIds = array_unique($cangIdArr, SORT_REGULAR);
            $cangs = count($cangIds);
            if ($cangs > 1) {
                $shipping = L('shippingdata-default-shipping');
            } else {
                $shipping = calShipping($cityId, $cangIds[0]['cang_id']);
            }
        }

        //直接购买
        if ($goodsId) {
            $cangId = M('goods')->where('goods_id = ' . $goodsId)->field('cang_id')->find();
            $shipping = calShipping($cityId, $cangId['cang_id']);

            if ($productId > 0) {
                $shopPice = M('products')->where('product_id = ' . $productId)->getField('price');
                $coupon = $this->getUserCouponForGoods($userId, $goodsId, $shopPice, $buyNum);
            } else {
                $goodsOne = M('goods')->where('goods_id = ' . $goodsId)->field('promote_price, shop_price, is_promote')->find();
                if ($goodsOne['is_promote'] == 1) {
                    if ($goodsOne['promote_price'] > $goodsOne['shop_price']) {
                        $coupon = $this->getUserCouponForGoods($userId, $goodsId, $goodsOne['shop_price'], $buyNum);
                    } else {
                        $coupon = $this->getUserCouponForGoods($userId, $goodsId, $goodsOne['promote_price'], $buyNum);
                    }
                } else {
                    $coupon = $this->getUserCouponForGoods($userId, $goodsId, $goodsOne['shop_price'], $buyNum);
                }
            }
        }
        //加载城市配送方式信息
        $shipping_id=0;
        $shipping_name='';
        $shipping_desc='';
        $support_pickup=0;
        $first_fee=0;
        $shipping_list=M('shipping_cityconfig')
            ->field('ecs_shipping_new.shipping_id, ecs_shipping_new.shipping_code, ecs_shipping_new.shipping_name, ecs_shipping_new.shipping_desc, ecs_shipping_new.support_pickup, ecs_shipping_new.first_weight, ecs_shipping_new.first_fee, ecs_shipping_new.unit_weight, ecs_shipping_new.unit_fee, ecs_shipping_cityconfig.is_default')
            ->join('LEFT JOIN ecs_shipping_new ON ecs_shipping_cityconfig.shipping_id = ecs_shipping_new.shipping_id')
            ->where('ecs_shipping_cityconfig.city_id='.$cityId)->order('ecs_shipping_cityconfig.is_default desc')->select();
        foreach ($shipping_list as $key=>$vo) {
            if($vo['is_default']==1){
                $shipping_id=$vo['shipping_id'];
                $shipping_name=$vo['shipping_name'];
                $shipping_desc=$vo['shipping_desc'];
                $support_pickup=$vo['support_pickup'];
                $first_fee=$vo['first_fee'];
            }
        }
        $result['shipping_id'] = $shipping_id;
        $result['shipping_name'] = $shipping_name;
        $result['shipping_desc'] = $shipping_desc;
        $result['support_pickup'] = $support_pickup;
        $result['first_fee'] = $first_fee;
        $result['shipping_list'] = $shipping_list;

        //加载支付方式
        $pay_id=3;
        $where=array();
        $where['enabled'] =1;
        $where['pay_id'] = ['in', [3, 8]];
        $payment=M('payment')->field('pay_id, pay_code, pay_name, pay_desc, is_cod')->where($where)->order('pay_order asc,pay_id asc')->select();
        foreach ($payment as $key=>$vo) {
            if($vo['pay_id']==$pay_id){
                $pay_desc=$vo['pay_desc'];
            }
        }
        $result['payment'] = $payment;
        $result['pay_desc'] = $pay_desc;

        //处理优惠券结构
        $coupons = [];
        if ($coupon['hascoupon']) {
            $coupons = $coupon['couponlist'];
        }
        $result['coupon'] = $coupons;

        $result['message'] = 'OK';
        $result['data'] = $shipping;
        $result['goods'] = $goods;
        $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
    }

    public function getPickUpWay ()
    {
        $result = array('statuscode' => 200, 'message' => '');
        $cityId = I('param.city_id/d', 0,'strip_tags,htmlspecialchars');
    }

    //获取提货点
    public function Getpickup(){
        $result = array('statuscode' => 200, 'message' => '');
        $city_id = I('param.city_id/d',0);
        $district_id = I('param.district_id/d',0);

        if($city_id<=0){
            $result['statuscode'] = 300;
            $result['message'] = L('shippingdata-err-data');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        $result_district=array();
        if($district_id>0){
            $where['city_id']=$city_id;
            $where['district_id']=$district_id;
            $where['enabled']=1;
            $result_district = M('pickup_point')->field('id, stanum, shop_name, address, province_id, city_id, district_id, longitude, latitude')->where($where)->order('shop_name asc, id asc')->select();
        }
        $rdlist='0';
        if($result_district){
            foreach ($result_district as $key=>$vo) {
                $rdlist==''?$rdlist=$vo['id']:$rdlist.=','.$vo['id'];
            }
        }
        $where=array();
        $where['city_id']=$city_id;
        $where['id']=array('not in',$rdlist);
        $where['enabled']=1;
        $result_city = M('pickup_point')->field('id, stanum, shop_name, address, province_id, city_id, district_id, longitude, latitude')->where($where)->order('shop_name asc, id asc')->select();

        $pointlist = array_merge($result_district,$result_city);

        foreach ($pointlist as $key=>$vo) {
            $sql = "SELECT concat( IFNULL(t.region_name, ''),' ',IFNULL(d.region_name, '')) AS region FROM ecs_region t, ecs_region d WHERE t.region_id=" . $vo['city_id'] . " AND d.region_id=" . $vo['district_id'] . "";
            $Model = new \Think\Model();
            $regiondata = $Model->query($sql);

            $sql1 = "SELECT concat( IFNULL(p.region_name, ''),' ',IFNULL(t.region_name, ''),' ',IFNULL(d.region_name, '')) AS region " .
                " FROM ecs_region p, ecs_region t, ecs_region d WHERE p.region_id=" . $vo['province_id'] . " AND t.region_id=" . $vo['city_id'] . " AND d.region_id=" . $vo['district_id'] . "";
            $regionalldata = $Model->query($sql1);
            $pointlist[$key]['region'] = $regiondata[0]['region'];
            $pointlist[$key]['region_all'] = $regionalldata[0]['region'];
            $pointlist[$key]['distance']='';
            $pointlist[$key]['dis']=0;
        }
        $result['statuscode'] = 200;
        $result['message'] = 'OK';
        $result['data'] = $pointlist;
        $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
    }

    /**
     * 獲取swiper
     *
     * @param $id
     * @return array
     */
    public function getGoodsSwipers ($id)
    {
        $rooturl = C('mainroot').'/';

        $where['goods_id'] = $id;
        $list = M('goods_gallery')->field('img_id, img_url, thumb_url, img_desc')->where($where)->order('img_sort asc')->select();
        $swiper_img = [];
        foreach ($list as $k => $v) {
            $swiper_img[] = $rooturl . $v['img_url'];
        }
        return $swiper_img;
    }

    /**
     * 獲取商品優惠券
     *
     * @param $goods_id
     * @return mixed
     */
    public function getGoodsCoupons ($goods_id, $goods_price = '', $goods_number = '')
    {
        if($goods_id<=0){
            $result['statuscode'] = 300;
            $result['message'] = '无法读取商品信息，请重试';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }else{
            $where=array();
            $where['is_real'] = 1;
            $where['is_on_sale']=1;
            $where['goods_id'] = $goods_id;
            $goodsdata=M('goods')->field('goods_id,cat_id')->where($where)->limit(1)->find();
            if(empty($goodsdata)){
                $result['statuscode'] = 300;
                $result['message'] = '当前商品不存在或者已下架';
                $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
            }
            $cat_id = $goodsdata['cat_id'];
        }
        // ecs_new_coupon couponid, name, cateid, serialnum, aesserialnum, amount, limitamount, memo, limitgetcount, leftgetcount, getcount, limitnum, limittype, limitdays, starttime, stoptime, forrange, forcateid, forgoodsid, pointset, pointamount, from_userid, for_new, for_rank, for_list, for_getway, is_top, is_hot, is_new, is_recommend, shortnum, createtime, status


        //读取商品定向券
        $checkgoodsid=','.$goods_id.',';
        $couponlist=array();
        $timeformat=C('timeformat');
        $dateformat=C('dateformat');

        $where=array();
        $where['status']=1;
        $where['forrange']=2;
        $where['for_getway'] = array('in','0,1');
        $where['for_list']=1;
        $where['from_userid']=0;
        $where['forgoodsid']=array('like','%'.$checkgoodsid.'%');
        $where['_string']="(limitgetcount=0 or (limitgetcount>0 and leftgetcount>0))";
        $list1=M('new_coupon')->field('couponid, name, amount, limitgetcount, leftgetcount, getcount, limitamount, limittype, limitdays, starttime, stoptime')->where($where)->order('shortnum asc,couponid desc')->select();
        foreach ($list1 as $key=>$vo) {
            $list1[$key]['amount'] = price_format($vo['amount'],0);
            $list1[$key]['limitamount'] = price_format($vo['limitamount'],0);

            if($vo['starttime']>0){
                $list1[$key]['starttime_show']=date($dateformat,$vo['starttime']);
            }
            if($vo['stoptime']>0){
                $list1[$key]['stoptime_show']=date($dateformat,$vo['stoptime']);
            }

            //判断是否能用优惠券
            if ($goods_price != '' && $goods_number != '') {
                if ($vo['limitamount'] > ($goods_price * $goods_number)) {
                    unset($list1[$key]);
                }
            }

            /*if ($vo['limittype'] == 2) {
                if ($vo['stoptime'] < time()) {
                    unset($list1[$key]);
                }
            }*/
        }
        //读取分类定向券
        $list2=array();

        //读取未定向券
        $where=array();
        $where['status']=1;
        $where['forrange']=0;
        $where['for_getway'] = array('in','0,1');
        $where['for_list']=1;
        $where['from_userid']=0;
        $where['_string']="(limitgetcount=0 or (limitgetcount>0 and leftgetcount>0))";
        $list3=M('new_coupon')->field('couponid, name, amount, limitgetcount, leftgetcount, getcount, limitamount, limittype, limitdays, starttime, stoptime')->where($where)->order('shortnum asc,couponid desc')->select();
        foreach ($list3 as $key=>$vo) {
            $list3[$key]['amount'] = price_format($vo['amount'],0);
            $list3[$key]['limitamount'] = price_format($vo['limitamount'],0);

            if($vo['starttime']>0){
                $list3[$key]['starttime_show']=date($dateformat,$vo['starttime']);
            }
            if($vo['stoptime']>0){
                $list3[$key]['stoptime_show']=date($dateformat,$vo['stoptime']);
            }

            //判断是否能用优惠券
            if ($goods_price != '' && $goods_number != '') {
                if ($vo['limitamount'] < ($goods_price * $goods_number)) {
                    unset($list1[$key]);
                }
            }

            /*if ($vo['limittype'] == 2) {
                if ($vo['stoptime'] < time()) {
                    unset($list1[$key]);
                }
            }*/
        }

        $couponlist=array_merge($list1,$list2,$list3);
        if($couponlist){
            $result['couponlist'] = $couponlist;
            $result['hascoupon'] = true;
        }else{
            $result['couponlist'] = $couponlist;
            $result['hascoupon'] = false;
        }
        return $result;
    }

    /**
     * Notes:获取用户可以用优惠券
     * User: src
     * DateTime: 2021/2/4 17:35
     * @param $user_id
     * @param $goods_id
     * @param string $goods_price
     * @param string $goods_number
     * @return array
     */
    public function getUserCouponForGoods ($user_id, $goods_id, $goods_price = '', $goods_number = '')
    {
        if ($user_id > 0) {
            //读取商品定向券
            $checkgoodsid=','.$goods_id.',';
            $couponlist=array();
            $timeformat=C('timeformat');
            $dateformat=C('dateformat');

            $where=array();
            $where['status'] = 1;
            $where['forrange']=2;
            $where['userid'] = $user_id;
            $where['forgoodsid']=array('like','%'.$checkgoodsid.'%');
            $list1 = M('new_coupon_logs')->field('id, couponid, name, amount, limitamount, starttime, stoptime')->where($where)->order('couponid desc')->select();
            foreach ($list1 as $key=>$vo) {
                $list1[$key]['amount'] = price_format($vo['amount'],0);
                $list1[$key]['limitamount'] = price_format($vo['limitamount'],0);

                if($vo['starttime']>0){
                    $list1[$key]['starttime_show']=date($dateformat,$vo['starttime']);
                }
                if($vo['stoptime']>0){
                    $list1[$key]['stoptime_show']=date($dateformat,$vo['stoptime']);
                }

                //判断是否能用优惠券
                if ($goods_price != '' && $goods_number != '') {
                    if ($vo['limitamount'] > ($goods_price * $goods_number)) {
                        $list1[$key]['is_use'] = 0;
                    } else {
                        $list1[$key]['is_use'] = 1;
                    }
                }

//                //是否过期
//                if ($vo['stoptime'] < time()) {
//                    $list1[$key]['is_use'] = 0;
//                } else {
//                    $list1[$key]['is_use'] = 1;
//                }
            }

            //读取未定向券
            $where=array();
            $where['status'] = 1;
            $where['forrange']=0;
            $where['userid'] = $user_id;
            $list2 = M('new_coupon_logs')->field('id, couponid, name, amount, limitamount, starttime, stoptime')->where($where)->order('couponid desc')->select();
            foreach ($list2 as $key=>$vo) {
                $list2[$key]['amount'] = price_format($vo['amount'],0);
                $list2[$key]['limitamount'] = price_format($vo['limitamount'],0);

                if($vo['starttime']>0){
                    $list2[$key]['starttime_show']=date($dateformat,$vo['starttime']);
                }
                if($vo['stoptime']>0){
                    $list2[$key]['stoptime_show']=date($dateformat,$vo['stoptime']);
                }

                //判断是否能用优惠券
                if ($goods_price != '' && $goods_number != '') {
                    if ($vo['limitamount'] > ($goods_price * $goods_number)) {
                        $list2[$key]['is_use'] = 0;
                    } else {
                        $list2[$key]['is_use'] = 1;
                    }
                }

//                //是否过期
//                if ($vo['stoptime'] < time()) {
//                    $list2[$key]['is_use'] = 0;
//                } else {
//                    $list2[$key]['is_use'] = 1;
//                }
            }

            $couponlist=array_merge($list1,$list2);
            $is_use = array_column($couponlist,'is_use');
            array_multisort($is_use,SORT_DESC,$couponlist);

            if($couponlist){
                $result['couponlist'] = $couponlist;
                $result['hascoupon'] = true;
            }else{
                $result['couponlist'] = $couponlist;
                $result['hascoupon'] = false;
            }
            return $result;
        }
        return [];
    }
}