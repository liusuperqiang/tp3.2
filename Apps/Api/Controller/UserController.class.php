<?php


namespace Api\Controller;


class UserController extends ApiBaseController
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 用户登录
     */
    public function sign ()
    {
        $result = ['statuscode' => 200, 'message' => ''];

        $mobile = I('param.mobile/s', '', 'strip_tags,htmlspecialchars');
        $password = I('param.password/s', '', 'strip_tags,htmlspecialchars');
        $verifycode = I('param.verifycode/s', '', 'strip_tags,htmlspecialchars');

        $rooturl = C('mainroot').'/';

//        $mobile = '7' . $mobile;

        $db = M('users');
        $where['mobile_phone'] = $mobile;
        $user = $db->where($where)
            ->field('user_id, yaoqing_code, mobile_phone, user_name, user_rank, headimg, user_money, ec_salt, password, address_id')
            ->find();
        if (!$user) {
            $result['statuscode'] = 400;
            $result['message'] = 'Аккаунт не зарегистрирован, сначала зарегистрируйтесь';
            return $this->ajaxReturn($result);
        }
        //密碼登錄
        if ($password) {
            $pwd = md5(md5($password) . $user['ec_salt']);
            if ($pwd != $user['password']) {
                $result['statuscode'] = 300;
                $result['message'] = 'неправильный пароль';
                return $this->ajaxReturn($result);
            }
        }

        //驗證碼登錄
        if ($verifycode) {
            if ($verifycode != $_SESSION['verify_'.$mobile.'_verifycode']) {
                $result['statuscode'] = 300;
                $result['message'] = 'Ошибка кода подтверждения телефона';
                return $this->ajaxReturn($result);
            }
        }
        $userRank = M('user_rank')->where('rank_id = ' . $user['user_rank'])->field('rank_name, discount')->find();

        session('user_id', $user['user_id']);
        session('user_info', $user);
        session('discount', $userRank['discount'] / 100.00);

        $user['headimg'] = $rooturl . $user['headimg'];
        $user['rank_name'] = $userRank['rank_name'];

        $result['message'] = 'Авторизация успешна';
        $result['data'] = $user;
        return $this->ajaxReturn($result);
    }

    /**
     * 退出
     */
    public function signOut ()
    {
        $result = ['statuscode' => 200, 'message' => ''];
        $userId = I('param.user_id/d', 0, 'strip_tags,htmlspecialchars');

        if ($userId <= 0) {
            $result['statuscode'] = 300;
            $result['message'] = L('user-Illegal-operation');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        session('user_id', null);
        session('user_info', null);
        session('discount', null);

        $result['message'] = 'успешно выйти';
        $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
    }

    //注册
    public function Savereg(){
        $result = array('statuscode' => 200, 'message' => '');

        $mobile = I('param.mobile/s','','strip_tags,htmlspecialchars');
        $password = I('param.password/s','','strip_tags,htmlspecialchars');
        $verifycode = I('param.verifycode/s','','strip_tags,htmlspecialchars');
        $invite_code = I('param.invite_code/d',0,'strip_tags,htmlspecialchars');

        $mobile=str_replace(' ','',$mobile);
        $mobile=str_replace('-','',$mobile);
        $mobile=str_replace('(','',$mobile);
        $mobile=str_replace(')','',$mobile);

        $parent = M('users')->field('user_id, user_rank')->where('yaoqing_code = ' . $invite_code)->limit(1)->find();

        if(empty($parent)){
            $result['statuscode'] = 300;
            $result['message'] = L('reg-err-parent');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }else{
            if($parent['user_rank']<2){
                $result['statuscode'] = 300;
                $result['message'] = L('reg-err-parent');
                $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
            }
        }

        if(!is_mobile($mobile)){
            $result['statuscode'] = 300;
            $result['message'] = L('reg-err-mobilenregx');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }else{
            $checkmobile='7'.$mobile;
//            $checkmobile=$mobile;
            //判断是否存在  ecs_users user_id, yaoqing_code, zidingyi_yaoqing_code, parent_id, mobile_phone,
            $where=array();
            $where['mobile_phone'] = $mobile;
            $checkmobilehas=M('users')->field('user_id')->where($where)->limit(1)->find();
            if($checkmobilehas){
                $result['statuscode'] = 300;
                $result['message'] = L('reg-err-hasmobile');
                $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
            }
        }

        if(mb_strlen($password,'UTF8')<6 OR mb_strlen($password,'UTF8')>16){
            $result['statuscode'] = 300;
            $result['message'] = L('reg-err-pwdlen');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }
        if(mb_strlen($verifycode,'UTF8')<4 OR mb_strlen($verifycode,'UTF8')>6){
            $result['statuscode'] = 300;
            $result['message'] = L('reg-err-vcodelen');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }else{
            //   session('verify_'.$mobile.'_verifycode',$mobileverify,90);
            // ecs_smslog id, mobile, smscontent, responsedata, updatetime, status,

            $where=array();
            $where['mobile']=$checkmobile;
            $where['status']=1;
            $verdata=M('smslog')->field('id,updatetime')->where($where)->order('updatetime desc')->limit(1)->find();
            if(empty($verdata)){
                $result['statuscode'] = 300;
                $result['message'] = L('reg-err-regetcode');
                $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
            }else{
//                $result['statuscode'] = 300;
//                $result['message'] = $verdata['updatetime'].'--'.time();
//                $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);

                if($verdata['updatetime']<time()-300){
                    $result['statuscode'] = 300;
                    $result['message'] = L('reg-err-codetimeout');
                    $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
                }else{
                    if($verifycode!=session('verify_'.$checkmobile.'_verifycode')){
                        $result['statuscode'] = 300;
                        $result['message'] = L('reg-err-codeerror');
                        $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
                    }else{
                        session('verify_'.$mobile.'_verifycode',null);
                    }
                }
            }
        }

        $user_name = generate_username_by_mobile($mobile);
        $reg_time = time();
        $last_time = date('Y-m-d H:i:s',$reg_time);

        $password = md5($password);
        $ec_salt = '0';
        $yaoqing_code = M('users')->order('yaoqing_code desc')->limit(1)->getField('yaoqing_code');
        $yaoqing_code=intval($yaoqing_code);
        $yaoqing_code++;
        if($yaoqing_code<10000){
            $yaoqing_code=10000;
        }

        $ip=get_client_ip();

        $data=array();
        $data['yaoqing_code'] = $yaoqing_code;
        $data['zidingyi_yaoqing_code'] = '';
        $data['parent_id'] = $parent['user_id'];
        $data['mobile_phone'] = $mobile;
        $data['user_name'] = $user_name;
        $data['user_rank'] = 0;
        $data['user_money'] = 0;
        $data['my_shop'] = '';
        $data['wx_open_id'] = '';
        $data['app_open_id'] = '';
        $data['miniwx_open_id'] = '';
        $data['union_id'] = '';
        $data['headimg'] = '';
        $data['relation_id'] = 0;
        $data['nickname'] = '';
        $data['password'] = $password;
        $data['ec_salt'] = $ec_salt;
        $data['is_surplus_open'] = 0;
        $data['surplus_password'] = '';
        $data['question'] = '';
        $data['answer'] = '';
        $data['sex'] = 0;
        $data['email'] = '';
        $data['birthday'] = '2000-01-01';
        $data['aite_id'] = '';
        $data['frozen_money'] = 0;
        $data['xiaofei_money'] = 0;
        $data['pay_points'] = 0;
        $data['rank_points'] = 0;
        $data['address_id'] = 0;
        $data['reg_time'] = $reg_time;
        $data['last_login'] = $reg_time;
        $data['last_request_time'] = $reg_time;
        $data['last_time'] = $last_time;
        $data['last_ip'] = $ip;
        $data['visit_count'] = 1;
        $data['gudong_rank'] = 0;
        $data['is_special'] = 0;
        $data['salt'] = 0;
        $data['flag'] = 0;
        $data['alias'] = '';
        $data['msn'] = '';
        $data['qq'] = '';
        $data['office_phone'] = '';
        $data['home_phone'] = '';
        $data['is_validated'] = 0;
        $data['validated'] = 0;
        $data['credit_line'] = 0;
        $data['passwd_question'] = '';
        $data['passwd_answer'] = '';
        $data['is_fenxiao'] = 0;
        $data['real_name'] = '';
        $data['card'] = '';
        $data['face_card'] = '';
        $data['back_card'] = '';
        $data['country'] = 0;
        $data['province'] = 0;
        $data['city'] = 0;
        $data['status'] = 0;
        $data['district'] = 0;
        $data['address'] = '';
        $data['mediaUID'] = '';
        $data['mediaID'] = 0;
        $data['froms'] = 'mobile';
        $data['passwd_weixin'] = '';
        $data['weixin'] = '';
        $data['tb_access_token'] = '';
        $data['vip_tip'] = 0;
        $data['first_login'] = 0;
        M('users')->add($data);
        session('get_mobile',$mobile);
        session('reg_mobile',null);
        $result['statuscode'] = 200;
        $result['message'] = 'OK';
        //发送短信  and $from=='share'
        if($parent['user_id'] == 10013){
            $snum = 'tt67z89s';
            $Sms = A('Api/Kzsms');
            $telegramlink='https://t.me/joinchat/AAAAAFW3vZNtN-0puwIYBg';
            $sendresult = $Sms->Send('+7'.$mobile,$snum,array('param1'=>$telegramlink));
        }

        $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
    }

    /**
     * 读取用户地址
     */
    public function getUserAddress ()
    {
        $result = ['statuscode' => 200, 'message' => ''];

        $userId = I('param.user_id/s', 0, 'strip_tags,htmlspecialchars');
        $addressId = I('param.address_id/d', 0, 'strip_tags,htmlspecialchars');
        $defaultaddress = I('param.defaultaddress/s', '', 'strip_tags,htmlspecialchars');

        if ($userId <= 0) {
            $result['statuscode'] = 300;
            $result['message'] = 'Ошибка информации о пользователе';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        $where = [];
        $where['user_id'] = $userId;
        $field = 'address_id, consignee, country, province, city, district, address, mobile';
        if ($addressId > 0) {
            //获取默认地址
            if ($defaultaddress && $defaultaddress == 'default') {
                $default = M('users')->where('user_id = ' . $userId)->field('address_id')->find();
                $addressId = $default['address_id'];
            }
            $where['address_id'] = $addressId;
            $list = M('user_address')->where($where)->field($field)->find();
            $list['country_name'] = getRegionName($list['country']);
            $list['province_name'] = getRegionName($list['province']);
            $list['city_name'] = getRegionName($list['city']);
            $list['district_name'] = getRegionName($list['district']);

            list($firstName, $lastName) = explode(' ', $list['consignee']);
            $list['first_name'] = $firstName;
            $list['last_name'] = $lastName;
        } else {
            $list = M('user_address')->where($where)->field($field)->order('address_id desc')->select();
            foreach ($list as $k => $v) {
                $list[$k]['country_name'] = getRegionName($v['country']);
                $list[$k]['province_name'] = getRegionName($v['province']);
                $list[$k]['city_name'] = getRegionName($v['city']);
                $list[$k]['district_name'] = getRegionName($v['district']);
            }
        }
        //获取默认地址
        $default = M('users')->where('user_id = ' . $userId)->field('address_id')->find();

        $result['message'] = 'Получите адрес успешно';
        $result['data'] = $list;
        $result['default'] = $default['address_id'];
        return $this->ajaxReturn($result);
    }

    /**
     * 设置默认地址
     */
    public function setDefaultAddress ()
    {
        $result = ['statuscode' => 200, 'message' => ''];

        $addressId = I('param.address_id/d', 0, 'strip_tags,htmlspecialchars');
        $userId = I('param.user_id/d', 0, 'strip_tags,htmlspecialchars');

        if ($addressId <= 0 || $userId <= 0) {
            $result['statuscode'] = 300;
            $result['message'] = L('user-Illegal-operation');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        $where = [];
        $where['user_id'] = $userId;
        $data['address_id'] = $addressId;
        M('users')->where($where)->save($data);

        $result['message'] = L('set-operation-success');
        $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
    }

    /**
     * 添加地址
     */
    public function userAddAddress ()
    {
        $result = ['statuscode' => 200, 'message' => ''];

        $userId = I('param.user_id/d', 0, 'strip_tags,htmlspecialchars');
        $name = I('param.name/s', '', 'strip_tags,htmlspecialchars');
        $lastname = I('param.lastname/s', '', 'strip_tags,htmlspecialchars');
        $province = I('param.province/d', 0, 'strip_tags,htmlspecialchars');
        $city = I('param.city/d', 0, 'strip_tags,htmlspecialchars');
        $district = I('param.district/d', 0, 'strip_tags,htmlspecialchars');
        $address = I('param.address/s', '', 'strip_tags,htmlspecialchars');
        $mobile = I('param.mobile/d', 0, 'strip_tags,htmlspecialchars');

        if($name==''){
            $result['statuscode'] = 300;
            $result['message'] = L('address-error-firsterr');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }else{
            $arrfirst_name=explode(' ',$name);
            if(count($arrfirst_name)>1){
                $result['statuscode'] = 300;
                $result['message'] = L('address-error-firsterr');
                $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
            }
        }

        if($lastname==''){
            $result['statuscode'] = 300;
            $result['message'] = L('address-error-lasterr');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }else{
            $arrlast_name=explode(' ',$lastname);
            if(count($arrlast_name)>1){
                $result['statuscode'] = 300;
                $result['message'] = L('address-error-lasterr');
                $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
            }
        }
        $consignee = $name.' '.$lastname;

        if(!is_mobile($mobile)){
            $result['statuscode'] = 300;
            $result['message'] = L('address-error-mobileerr');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        if($address==''){
            $result['statuscode'] = 300;
            $result['message'] = L('address-error-addresserr');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        if($province<=0 or $city<=0){
            $result['statuscode'] = 300;
            $result['message'] = L('address-error-cityerr');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        $data = [];
        $data['user_id'] = $userId;
        $data['consignee'] = $consignee;
        $data['country'] = 0;
        $data['province'] = $province;
        $data['city'] = $city;
        $data['district'] = $district;
        $data['address'] = $address;
        $data['mobile'] = $mobile;

        $res = M('user_address')->add($data);
        if ($res) {
            $result['message'] = 'Адрес успешно добавлен';
            return $this->ajaxReturn($result);
        } else {
            $result['statuscode'] = 300;
            $result['message'] = 'Не удалось добавить адрес';
            return $this->ajaxReturn($result);
        }
    }

    /**
     * 读取省
     */
    public function getProvice ()
    {
        $result = ['statuscode' => 200, 'message' => ''];

        $where=array();
        $where['parent_id'] = 1;
        $area = M('region')
            ->fetchSql(false)
            ->field('region_id,region_name as text')
            ->where($where)->order('region_id asc')->select();

        foreach ($area as $k => $v) {
            $area[$k]['children'] = $this->getCity($v['region_id']);
        }
        $result['message'] = 'Получите данные успешно';
        $result['data'] = $area;
        return $this->ajaxReturn($result);
    }

    /**
     * 获取城市名称
     */
    public function getCity ($provice_id)
    {
        $where=array();
        $where['parent_id'] = $provice_id;
        $list = M('region')->fetchSql(false)->field('region_id as value,region_name as text')->where($where)->order('region_id asc')->select();

        foreach ($list as $k => $v) {
            $res = $this->getCity($v['value']);
            if ($res) {
                $list[$k]['children'] = $res;
            }
        }
        return $list;
    }

    /**
     * 地址删除
     */
    public function userDelAddress ()
    {
        $result = ['statuscode' => 200, 'message' => ''];

        $userId = I('param.user_id/d', 0, 'strip_tags,htmlspecialchars');
        $addressId = I('param.address_id/d', 0, 'strip_tags,htmlspecialchars');

        if ($addressId <= 0) {
            $result['statuscode'] = 300;
            $result['message'] = 'ошибка';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }
        $where = [];
        $where['address_id'] = $addressId;
        M('user_address')->where($where)->delete();

        $result['message'] = 'успешно удален';
        return $this->ajaxReturn($result);
    }

    //获取用户优惠券列表
    public function Getusercouponlist(){
        $result = array('statuscode' => 200, 'message' => '');
        $skip = I('param.skip/d',0);
        $maxperpage = I('param.maxperpage/d',20);

        $user_id = I('param.user_id/d',0,'strip_tags,htmlspecialchars'); //主ID
        $showtype = I('param.showtype/d',1,'strip_tags,htmlspecialchars');//1可用   2已用   3过期
        $keyword = I('param.keyword/s','','strip_tags,htmlspecialchars');
        $keyword = trim($keyword);

        $timestamp = I('param.timestamp/d',0,'strip_tags,htmlspecialchars');
        $sign = I('param.sign/s','','strip_tags,htmlspecialchars');
//        $user_id=10098;

        /*$hmackey=C('hmackey');
        if (function_exists('hash_hmac') and $user_id>0 and $timestamp>0 and $sign!='') {
            $checkstr=$timestamp.'-user-id-'.$user_id;
            $checksign = hash_hmac("sha1", $checkstr, $hmackey,false);
            if($checksign!=$sign){
                $checksign = hash_hmac("sha256", $checkstr, $hmackey,false);
                if($checksign!=$sign){
                    $result['statuscode'] = 300;
                    $result['message'] = L('global_error_api');
                    $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
                }
            }
        }*/

        $rooturl = C('mainroot').'/';
        $approoturl = C('approot').'/';

        if($user_id<=0){
            $result['statuscode'] = 300;
            $result['message'] = '请登陆后继续操作';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }else{
            $user_rank=M('users')->where('user_id='.$user_id)->limit(1)->getField('user_rank');
        }

        //加载列表
        $db = M('new_coupon_logs');
        $where['userid']=$user_id;
        switch ($showtype){
            case 1://可用
                $where['status']=1;
                $stoptime=date('Y-m-d H:i:s',time());
                $stoptime=local_strtotime($stoptime,0);
                $where['stoptime'] = array('egt',$stoptime);
                break;
            case 2://已用
                $where['status']=2;
                break;
            case 3://过期
                $stoptime=date('Y-m-d H:i:s',time());
                $stoptime=local_strtotime($stoptime,0);
                $where['_string'] = "status=0 or (status=1 and stoptime<=$stoptime)";
                break;
        }

        if($keyword!=''){
            $where['name|serialnum'] =array('like','%'.$keyword.'%');
        }

        $list = $db->fetchSql(false)
            ->field('id, couponid, name, serialnum, amount, limitamount, memo, starttime, stoptime, forrange, forcateid, forgoodsid, order_id, order_sn, gettime, usetime, status')
            ->where($where)
            ->order('id desc')
            ->limit($skip,$maxperpage)
            ->select();

        $timeformat=C('timeformat');
        $dateformat=C('dateformat');
        foreach($list as $key=>$vo){
            $list[$key]['amount'] = price_format($vo['amount'],0);
            $list[$key]['limitamount'] = price_format($vo['limitamount'],0);

            if($vo['forcateid']!=''){
                $forcateid = trim($vo['forcateid'],',');
                $arrforcateid = explode(',',$forcateid);
                $where=array();
                $where['cat_id'] = array('in',$arrforcateid);
                $forcatelist=M('category')->field('cat_id, cat_name')->where($where)->select();
                $list[$key]['forcatelist']=$forcatelist;
            }
            if($vo['forgoodsid']!=''){
                // ecs_ goods goods_id, goods_sn, goods_name
                $forgoodsid = trim($vo['forgoodsid'],',');
                $forgoodsid = str_replace("\r\n","",$forgoodsid);
                $forgoodsid = str_replace(chr(10),"",$forgoodsid);
                $forgoodsid = str_replace(chr(13),"",$forgoodsid);
                $forgoodsid = str_replace(chr(10).chr(13),"",$forgoodsid);
                $arrforgoodsid = explode(',',$forgoodsid);
                $hasmore=false;
                if(count($arrforgoodsid)>5){
                    $hasmore=true;
                }
                $where=array();
                $where['is_on_sale']=1;
                $where['goods_id'] = array('in',$arrforgoodsid);
                $forgoodslist=M('goods')->field('goods_id, goods_sn, goods_name')->where($where)->limit(5)->select();
                foreach ($forgoodslist as $kk=>$vv) {
                    $forgoodslist[$kk]['goods_name']=$vv['goods_name'];
                    unset($forgoodslist[$kk]['goods_sn']);
                }
                $list[$key]['forgoodslist']=$forgoodslist;
                $list[$key]['hasmore']=$hasmore;
            }

            $list[$key]['gettime_show']=date($timeformat,$vo['gettime']);
            if($vo['usetime']>0){
                $list[$key]['usetime_show']=date($timeformat,$vo['usetime']);
            }else{
                $list[$key]['usetime_show']='';
            }
            $list[$key]['starttime_show']=date($dateformat,$vo['starttime']);
            $list[$key]['stoptime_show']=date($dateformat,$vo['stoptime']);
        }
//        print_r($list);
//        exit;

        $pagecount = count($list);
        $pagetotalcount = $db->fetchSql(false)->where($where)->count('id');


        if($list){
            $statuscode = 200;
            //如果当页数量小于每页数量，则代表最后一页
            if($pagecount<$maxperpage){
                $message= 'Last';
            }else{
                $message='Success';
            }
        }else{
            $statuscode = 300;
            if($skip==0){
                $message=L('g-nodata');
            }else{
                $message='Last';
            }
        }
        $skip = $skip+$maxperpage;

        $result['statuscode'] = $statuscode;
        $result['message'] = $message;
        $result['skip'] = $skip;
        $result['pagecount'] = $pagecount;
        $result['pagetotalcount'] = $pagetotalcount;
        $result['list'] = $list;

        $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
    }

    /**
     * 读取收藏商品
     */
    public function userCollectGoods ()
    {
        $result = ['statuscode' => 200, 'message' => ''];
        $userId = I('param.user_id/d', 0, 'strip_tags,htmlspecialchars');

        if ($userId <= 0) {
            $result['statuscode'] = 300;
            $result['message'] = L('user-Illegal-operation');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        $rooturl = C('mainroot').'/';

        $where = [];
        $where['ecs_collect_goods.user_id'] = $userId;
        $where['is_delete'] = 0;
        $where['is_on_sale'] = 1;
        $where['is_real']=1;
        $list = M('collect_goods')
            ->join('LEFT JOIN ecs_goods ON ecs_goods.goods_id = ecs_collect_goods.goods_id')
            ->where($where)
            ->order('ecs_collect_goods.add_time')
            ->field('ecs_goods.goods_id, ecs_goods.goods_name, ecs_goods.goods_sn, ecs_goods.shop_price, ecs_goods.shop_price, 
                ecs_goods.yongjin_bili, ecs_goods.goods_thumb, ecs_goods.goods_number, ecs_collect_goods.rec_id')
            ->select();

        if ($list) {
            foreach ($list as $k => $v) {
                $list[$k]['goods_thumb'] = $rooturl. $v['goods_thumb'];
                $list[$k]['shop_price'] = price_format($v['shop_price'], 0);
                $list[$k]['brokerage'] = round($v['shop_price'] * $v['yongjin_bili'] / 100);
            }
        }

        $result['message'] = 'OK';
        $result['data'] = $list;
        $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
    }

    /**
     * 删除收藏
     */
    public function deleteCollectGoods ()
    {
        $result = ['statuscode' => 200, 'message' => ''];
        $userId = I('param.user_id/d', 0, 'strip_tags,htmlspecialchars');
        $recId = I('param.rec_id/d', 0, 'strip_tags,htmlspecialchars');
        $goodsId = I('param.goods_id/d', 0, 'strip_tags,htmlspecialchars');

        if ($userId <= 0 || ($recId <= 0 && $goodsId <= 0)) {
            $result['statuscode'] = 300;
            $result['message'] = L('user-Illegal-operation');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        if ($recId) {
            M('collect_goods')->where('rec_id = ' . $recId)->delete();
        }

        if ($goodsId) {
            $where = [];
            $where['user_id'] = $userId;
            $where['goods_id'] = $goodsId;
            M('collect_goods')->where($where)->delete();
        }

        $result['message'] = L('delete-success');
        $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
    }

    /**
     * 收藏商品
     */
    public function collectGoods ()
    {
        $result = ['statuscode' => 200, 'message' => ''];
        $userId = I('param.user_id/d', 0, 'strip_tags,htmlspecialchars');
        $goodsId = I('param.goods_id/d', 0, 'strip_tags,htmlspecialchars');

        if ($userId <= 0 || $goodsId <= 0) {
            $result['statuscode'] = 300;
            $result['message'] = L('user-Illegal-operation');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        //判断是否已经收藏
        $collectGoods = M('collect_goods')->where('user_id = ' . $userId . ' and goods_id = ' . $goodsId)->find();
        if ($collectGoods) {
            $result['statuscode'] = 300;
            $result['message'] = 'Этот продукт был добавлен в избранное';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        //查看商品是否删除 下架
        $where = [];
        $where['goods_id'] = $goodsId;
        $where['is_delete'] = 0;
        $where['is_on_sale'] = 1;
        $where['is_real']=1;
        $goods = M('goods')->where($where)->limit(1)->find();
        if (!$goods) {
            $result['statuscode'] = 300;
            $result['message'] = 'Этот продукт больше не доступен';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        $data = [];
        $data['user_id'] = $userId;
        $data['goods_id'] = $goodsId;
        $data['add_time'] = time();
        $res = M('collect_goods')->add($data);
        if ($res) {
            $result['message'] = L('collect-goods-success');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        } else {
            $result['statuscode'] = 300;
            $result['message'] = L('collect-goods-fail');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }
    }

    /**
     * VIP邀请的user
     */
    public function vipInviteUser ()
    {
        $result = ['statuscode' => 200, 'message' => ''];
        $userId = I('param.user_id/d', 0, 'strip_tags,htmlspecialchars');
        $date = I('param.date/s', '', 'strip_tags,htmlspecialchars');
        $keyword = I('param.keyword/s','','strip_tags,htmlspecialchars');
        $keyword = trim($keyword);

        if ($userId <= 0) {
            $result['statuscode'] = 300;
            $result['message'] = L('user-Illegal-operation');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        $isVipOrVipPlus = M('users')->where('user_id = ' . $userId)->getField('user_rank');
        if (!in_array($isVipOrVipPlus, [2, 3])) {
            $result['statuscode'] = 300;
            $result['message'] = 'Вы не VIP или VIPplus';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        $rooturl = C('mainroot').'/';

        $where = [];
        $where['parent_id'] = $userId;
        $where['user_rank'] = 0;
        if($keyword!=''){
            $where['mobile_phone|user_name'] =array('like','%'.$keyword.'%');
        }
        $users = M('users')->where($where)
            ->field('user_id, user_name, headimg, mobile_phone')
            ->order('user_id desc')
            ->select();

        $count = 0;
        $allperformance = 0;
        if ($users) {
            $count = count($users);
            foreach ($users as $k => $v) {
                $where = [];
                $where['user_id'] = $v['user_id'];
                $where['pay_status'] = 2;

                switch ($date) {
                    case 'all':
                        break;
                    case 'day':
                        $startTime = strtotime(date('Y-m-d'));
                        $endtTime = time();
                        $where['add_time'] = ['between', [$startTime, $endtTime]];
                        break;
                    case 'week':
                        $startTime = mktime(0,0,0,date('m'),date('d')-date('w')+1,date('y'));
                        $endtTime=time();
                        $where['add_time'] = ['between', [$startTime, $endtTime]];
                        break;
                    case 'month':
                        $startTime=mktime(0,0,0,date('m'),1,date('Y'));
                        $endtTime=mktime(23,59,59,date('m'),date('t'),date('Y'));
                        $where['add_time'] = ['between', [$startTime, $endtTime]];
                        break;
                    default:
                        $startTime = strtotime($date);
                        $endtTime = strtotime("$startTime +1 month -1 day") + 86400;
                        $where['add_time'] = ['between', [$startTime, $endtTime]];
                }
                $performance = M('order_info')->where($where)->sum('order_amount');
                $users[$k]['performance'] = price_format($performance, 0);
                if ($v['headimg']) {
                    $users[$k]['headimg'] = $rooturl. $v['headimg'];
                }

                //用户业绩
                $allperformance += $users[$k]['performance'];

                //user是否申请vip
                $appvip = M('user_appvip')->where('user_id = ' . $v['user_id'])->find();
                if ($appvip) {
                    $users[$k]['status'] = 1;
                } else {
                    $users[$k]['status'] = 0;
                }

            }
        }
        $result['message'] = 'OK';
        $result['data'] = $users;
        $result['allperformance'] = $allperformance;
        $result['count'] = $count;
        $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
    }

    //vipplus团队
    public function vipPlusTeamVip ()
    {
        $result = ['statuscode' => 200, 'message' => ''];
        $userId = I('param.user_id/d', 0, 'strip_tags,htmlspecialchars');
        $date = I('param.date/s', '', 'strip_tags,htmlspecialchars');
        $keyword = I('param.keyword/s','','strip_tags,htmlspecialchars');
        $keyword = trim($keyword);

        if ($userId <= 0) {
            $result['statuscode'] = 300;
            $result['message'] = L('user-Illegal-operation');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        $isVipPlus = M('users')->where('user_id = ' . $userId)->getField('user_rank');
        if ($isVipPlus != 3) {
            $result['statuscode'] = 300;
            $result['message'] = 'Вы не VIP или VIPplus';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        $rooturl = C('mainroot').'/';

        $where = [];
        $where['parent_id'] = $userId;
        $where['user_rank'] = 2;
        if($keyword!=''){
            $where['mobile_phone|user_name|yaoqing_code'] =array('like','%'.$keyword.'%');
        }
        $vip = M('users')->where($where)
            ->field('user_id, user_name, headimg, mobile_phone, yaoqing_code')
            ->order('user_id desc')
            ->select();

        $count = 0;
        $allperformance = 0;
        if ($vip) {
            $count = count($vip);
            foreach ($vip as $k => $v) {
                $where = [];
                $where['parent_id'] = $v['user_id'];
                $where['user_rank'] = 0;
                $users = M('users')->where($where)
                    ->field('user_id, user_name, headimg, mobile_phone')
                    ->order('user_id desc')
                    ->select();
                $teamPerformance = 0;
                foreach ($users as $key => $val) {
                    $where = [];
                    $where['user_id'] = $val['user_id'];
                    $where['pay_status'] = 2;

                    switch ($date) {
                        case 'all':
                            break;
                        case 'day':
                            $startTime = strtotime(date('Y-m-d'));
                            $endtTime = time();
                            $where['add_time'] = ['between', [$startTime, $endtTime]];
                            break;
                        case 'week':
                            $startTime = mktime(0,0,0,date('m'),date('d')-date('w')+1,date('y'));
                            $endtTime=time();
                            $where['add_time'] = ['between', [$startTime, $endtTime]];
                            break;
                        case 'month':
                            $startTime=mktime(0,0,0,date('m'),1,date('Y'));
                            $endtTime=mktime(23,59,59,date('m'),date('t'),date('Y'));
                            $where['add_time'] = ['between', [$startTime, $endtTime]];
                            break;
                        default:
                            $startTime = strtotime($date);
                            $endtTime = strtotime("$startTime +1 month -1 day") + 86400;
                            $where['add_time'] = ['between', [$startTime, $endtTime]];
                    }

                    $performance = M('order_info')->where($where)->sum('order_amount');
                    $performance = price_format($performance, 0);
                    $teamPerformance += $performance;
                }
                //团队业绩
                $vip[$k]['performance'] = $teamPerformance;
                $vip[$k]['people_number'] = count($users);
                if ($v['headimg']) {
                    $users[$k]['headimg'] = $rooturl. $v['headimg'];
                }

                //全部业绩
                $allperformance += $vip[$k]['performance'];

            }
        }

        $result['message'] = 'OK';
        $result['data'] = $vip;
        $result['allperformance'] = $allperformance;
        $result['count'] = $count;
        $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
    }

    public function applyVip ()
    {
        $result = ['statuscode' => 200, 'message' => ''];
        $userId = I('param.user_id/d', 0, 'strip_tags,htmlspecialchars');
        $plus_user_id = I('param.plus_user_id/d', 0, 'strip_tags,htmlspecialchars');

        if ($userId <= 0 || $plus_user_id<= 0) {
            $result['statuscode'] = 300;
            $result['message'] = L('user-Illegal-operation');
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }

        $data = [];
        $data['plus_user_id'] = $plus_user_id;
        $data['user_id'] = $userId;
        $data['createtime'] = time();
        $data['status'] = 0;
        $res = M('user_appvip')->add($data);

        if ($res) {
            $result['message'] = 'Заявка одобрена и находится на рассмотрении';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        } else {
            $result['statuscode'] = 300;
            $result['message'] = 'Ошибка приложения, повторите попытку позже';
            $this->ajaxReturn($result,'JSON',JSON_UNESCAPED_UNICODE);
        }
    }
}